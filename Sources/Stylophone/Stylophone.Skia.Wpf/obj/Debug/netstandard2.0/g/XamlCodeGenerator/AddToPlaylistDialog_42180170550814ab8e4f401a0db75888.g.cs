// <autogenerated />
#pragma warning disable 618  // Ignore obsolete members warnings
#pragma warning disable 105  // Ignore duplicate namespaces
#pragma warning disable 1591 // Ignore missing XML comment warnings
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using Uno.UI;
using Uno.UI.Xaml;
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
using Windows.UI.Xaml.Controls.Primitives;
using Windows.UI.Xaml.Data;
using Windows.UI.Xaml.Documents;
using Windows.UI.Xaml.Media;
using Windows.UI.Xaml.Media.Animation;
using Windows.UI.Xaml.Shapes;
using Windows.UI.Text;
using Uno.Extensions;
using Uno;
using Uno.UI.Helpers.Xaml;
using Stylophone.Skia.Wpf;

#if __ANDROID__
using _View = Android.Views.View;
#elif __IOS__
using _View = UIKit.UIView;
#elif __MACOS__
using _View = AppKit.NSView;
#elif UNO_REFERENCE_API
using _View = Windows.UI.Xaml.UIElement;
#elif NET461
using _View = Windows.UI.Xaml.UIElement;
#endif

namespace Stylophone.Views
{
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("nventive.Usage", "NV0056", Justification="Generated code")]
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("nventive.Usage", "NV0058", Justification="Generated code")]
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("nventive.Usage", "NV1003", Justification="Generated code")]
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("nventive.Usage", "NV0085", Justification="Generated code")]
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("nventive.Usage", "NV2001", Justification="Generated code")]
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("nventive.Usage", "NV2003", Justification="Generated code")]
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("nventive.Usage", "NV2004", Justification="Generated code")]
	[global::System.Diagnostics.CodeAnalysis.SuppressMessage("nventive.Usage", "NV2005", Justification="Generated code")]
	public partial class AddToPlaylistDialog : Windows.UI.Xaml.Controls.ContentDialog
	{
		private void InitializeComponent()
		{
			var nameScope = new global::Windows.UI.Xaml.NameScope();
			NameScope.SetNameScope(this, nameScope);
			IsParsing = true
			;
			Resources["BoolToVisibilityConverter"] = 
			new global::Microsoft.Toolkit.Uwp.UI.Converters.BoolToVisibilityConverter
			{
				// Source ..\..\..\..\..\..\..\Stylophone.Shared\Views\Dialogs\AddToPlaylistDialog.xaml (Line 12:10)
			}
			;
			Resources["BoolNegationConverter"] = 
			new global::Microsoft.Toolkit.Uwp.UI.Converters.BoolNegationConverter
			{
				// Source ..\..\..\..\..\..\..\Stylophone.Shared\Views\Dialogs\AddToPlaylistDialog.xaml (Line 13:10)
			}
			;
			// Source ..\..\..\..\..\..\..\Stylophone.Shared\Views\Dialogs\AddToPlaylistDialog.xaml (Line 1:2)
			Content = 
			new global::Windows.UI.Xaml.Controls.ScrollViewer
			{
				IsParsing = true
				,
				// Source ..\..\..\..\..\..\..\Stylophone.Shared\Views\Dialogs\AddToPlaylistDialog.xaml (Line 15:6)
				Content = 
				new global::Windows.UI.Xaml.Controls.StackPanel
				{
					IsParsing = true
					,
					// Source ..\..\..\..\..\..\..\Stylophone.Shared\Views\Dialogs\AddToPlaylistDialog.xaml (Line 16:10)
					Children = 
					{
						new global::Windows.UI.Xaml.Controls.ComboBox
						{
							IsParsing = true
							,
							DisplayMemberPath = "Name"/* string/, Name, ComboBox/DisplayMemberPath */,
							SelectedValuePath = "Name"/* string/, Name, ComboBox/SelectedValuePath */,
							Width = 270d/* double/, 270, ComboBox/Width */,
							// Source ..\..\..\..\..\..\..\Stylophone.Shared\Views\Dialogs\AddToPlaylistDialog.xaml (Line 17:14)
							PlaceholderText = global::Windows.ApplicationModel.Resources.ResourceLoader.GetForCurrentView().GetString("AddToPlaylistComboBox/PlaceholderText"),
							Header = global::Windows.ApplicationModel.Resources.ResourceLoader.GetForCurrentView().GetString("AddToPlaylistComboBox/Header"),
						}
						.AddToPlaylistDialog_42180170550814ab8e4f401a0db75888_XamlApply((AddToPlaylistDialog_42180170550814ab8e4f401a0db75888XamlApplyExtensions.XamlApplyHandler0)(c0 => 
						{
							global::Uno.UI.Helpers.MarkupHelper.SetXUid(c0, "AddToPlaylistComboBox");
							c0.SetBinding(global::Windows.UI.Xaml.Controls.ComboBox.ItemsSourceProperty, new Windows.UI.Xaml.Data.Binding{ Mode = BindingMode.OneTime }.Apply(___b =>  /*defaultBindModeOneTime*/ global::Uno.UI.Xaml.BindingHelper.SetBindingXBindProvider(___b, this, ___ctx => ___ctx is global::Stylophone.Views.AddToPlaylistDialog ___tctx ? (object)(___tctx.Playlists) : null, null )));
														c0.SetBinding(global::Windows.UI.Xaml.Controls.ComboBox.VisibilityProperty, new Windows.UI.Xaml.Data.Binding{ Mode = global::Windows.UI.Xaml.Data.BindingMode.OneWay/* Windows.UI.Xaml.Data.BindingMode/Windows.UI.Xaml.Data.BindingMode, OneWay, Bind/Mode */, Converter = (global::Uno.UI.ResourceResolverSingleton.Instance.ResolveResourceStatic("BoolToVisibilityConverter", out var staticResourceResolverOutputIndex0, context: global::Stylophone.Skia.Wpf.GlobalStaticResources.__ParseContext_) ? ((staticResourceResolverOutputIndex0 as global::Windows.UI.Xaml.Data.IValueConverter) ?? default(global::Windows.UI.Xaml.Data.IValueConverter)) : default(global::Windows.UI.Xaml.Data.IValueConverter)),  }.Apply(___b =>  /*defaultBindModeOneTime*/ global::Uno.UI.Xaml.BindingHelper.SetBindingXBindProvider(___b, this, ___ctx => ___ctx is global::Stylophone.Views.AddToPlaylistDialog ___tctx ? (object)(___tctx.AllowExistingPlaylists) : null, null , new [] {"AllowExistingPlaylists"})));
														var SelectionChanged_Update_Selected_That = (this as global::Uno.UI.DataBinding.IWeakReferenceProvider).WeakReference;
							c0.SelectionChanged += (Update_Selected_sender,Update_Selected_e) => (SelectionChanged_Update_Selected_That.Target as AddToPlaylistDialog)?.Update_Selected(Update_Selected_sender,Update_Selected_e);
							c0.SetBinding(global::Windows.UI.Xaml.Controls.ComboBox.IsEnabledProperty, new Windows.UI.Xaml.Data.Binding{ Mode = global::Windows.UI.Xaml.Data.BindingMode.OneWay/* Windows.UI.Xaml.Data.BindingMode/Windows.UI.Xaml.Data.BindingMode, OneWay, Bind/Mode */, Converter = (global::Uno.UI.ResourceResolverSingleton.Instance.ResolveResourceStatic("BoolNegationConverter", out var staticResourceResolverOutputIndex1, context: global::Stylophone.Skia.Wpf.GlobalStaticResources.__ParseContext_) ? ((staticResourceResolverOutputIndex1 as global::Windows.UI.Xaml.Data.IValueConverter) ?? default(global::Windows.UI.Xaml.Data.IValueConverter)) : default(global::Windows.UI.Xaml.Data.IValueConverter)),  }.Apply(___b =>  /*defaultBindModeOneTime*/ global::Uno.UI.Xaml.BindingHelper.SetBindingXBindProvider(___b, this, ___ctx => ___ctx is global::Stylophone.Views.AddToPlaylistDialog ___tctx ? (object)(___tctx.AddNewPlaylist) : null, null , new [] {"AddNewPlaylist"})));
														this._component_0 = c0;
							global::Uno.UI.FrameworkElementHelper.SetBaseUri(c0, "file:///E:/Projects/MpcNET2/Sources/Stylophone/Stylophone.Shared/Views/Dialogs/AddToPlaylistDialog.xaml");
							c0.CreationComplete();
						}
						))
						,
						new global::Windows.UI.Xaml.Controls.CheckBox
						{
							IsParsing = true
							,
							// Source ..\..\..\..\..\..\..\Stylophone.Shared\Views\Dialogs\AddToPlaylistDialog.xaml (Line 19:14)
							Content = global::Windows.ApplicationModel.Resources.ResourceLoader.GetForCurrentView().GetString("NewPlaylistCheckBox/Content"),
						}
						.AddToPlaylistDialog_42180170550814ab8e4f401a0db75888_XamlApply((AddToPlaylistDialog_42180170550814ab8e4f401a0db75888XamlApplyExtensions.XamlApplyHandler1)(c1 => 
						{
							global::Uno.UI.Helpers.MarkupHelper.SetXUid(c1, "NewPlaylistCheckBox");
							c1.SetBinding(global::Windows.UI.Xaml.Controls.CheckBox.IsCheckedProperty, new Windows.UI.Xaml.Data.Binding{ Mode = global::Windows.UI.Xaml.Data.BindingMode.TwoWay/* Windows.UI.Xaml.Data.BindingMode/Windows.UI.Xaml.Data.BindingMode, TwoWay, Bind/Mode */,  }.Apply(___b =>  /*defaultBindModeOneTime*/ global::Uno.UI.Xaml.BindingHelper.SetBindingXBindProvider(___b, this, ___ctx => ___ctx is global::Stylophone.Views.AddToPlaylistDialog ___tctx ? (object)(___tctx.AddNewPlaylist) : null, (___ctx, __value) => { if(___ctx is global::Stylophone.Views.AddToPlaylistDialog ___tctx) ___tctx.AddNewPlaylist = (bool)global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(bool), __value); } , new [] {"AddNewPlaylist"})));
														var Click_Update_Checkbox_That = (this as global::Uno.UI.DataBinding.IWeakReferenceProvider).WeakReference;
							c1.Click += (Update_Checkbox_sender,Update_Checkbox_e) => (Click_Update_Checkbox_That.Target as AddToPlaylistDialog)?.Update_Checkbox(Update_Checkbox_sender,Update_Checkbox_e);
							c1.SetBinding(global::Windows.UI.Xaml.Controls.CheckBox.VisibilityProperty, new Windows.UI.Xaml.Data.Binding{ Mode = global::Windows.UI.Xaml.Data.BindingMode.OneWay/* Windows.UI.Xaml.Data.BindingMode/Windows.UI.Xaml.Data.BindingMode, OneWay, Bind/Mode */, Converter = (global::Uno.UI.ResourceResolverSingleton.Instance.ResolveResourceStatic("BoolToVisibilityConverter", out var staticResourceResolverOutputIndex2, context: global::Stylophone.Skia.Wpf.GlobalStaticResources.__ParseContext_) ? ((staticResourceResolverOutputIndex2 as global::Windows.UI.Xaml.Data.IValueConverter) ?? default(global::Windows.UI.Xaml.Data.IValueConverter)) : default(global::Windows.UI.Xaml.Data.IValueConverter)),  }.Apply(___b =>  /*defaultBindModeOneTime*/ global::Uno.UI.Xaml.BindingHelper.SetBindingXBindProvider(___b, this, ___ctx => ___ctx is global::Stylophone.Views.AddToPlaylistDialog ___tctx ? (object)(___tctx.AllowExistingPlaylists) : null, null , new [] {"AllowExistingPlaylists"})));
														this._component_1 = c1;
							global::Uno.UI.FrameworkElementHelper.SetBaseUri(c1, "file:///E:/Projects/MpcNET2/Sources/Stylophone/Stylophone.Shared/Views/Dialogs/AddToPlaylistDialog.xaml");
							c1.CreationComplete();
						}
						))
						,
						new global::Windows.UI.Xaml.Controls.TextBox
						{
							IsParsing = true
							,
							// Source ..\..\..\..\..\..\..\Stylophone.Shared\Views\Dialogs\AddToPlaylistDialog.xaml (Line 20:14)
							PlaceholderText = global::Windows.ApplicationModel.Resources.ResourceLoader.GetForCurrentView().GetString("NewPlaylistTextBox/PlaceholderText"),
						}
						.AddToPlaylistDialog_42180170550814ab8e4f401a0db75888_XamlApply((AddToPlaylistDialog_42180170550814ab8e4f401a0db75888XamlApplyExtensions.XamlApplyHandler2)(c2 => 
						{
							global::Uno.UI.Helpers.MarkupHelper.SetXUid(c2, "NewPlaylistTextBox");
							c2.SetBinding(global::Windows.UI.Xaml.Controls.TextBox.TextProperty, new Windows.UI.Xaml.Data.Binding{ Mode = global::Windows.UI.Xaml.Data.BindingMode.TwoWay/* Windows.UI.Xaml.Data.BindingMode/Windows.UI.Xaml.Data.BindingMode, TwoWay, Bind/Mode */,  }.Apply(___b =>  /*defaultBindModeOneTime*/ global::Uno.UI.Xaml.BindingHelper.SetBindingXBindProvider(___b, this, ___ctx => ___ctx is global::Stylophone.Views.AddToPlaylistDialog ___tctx ? (object)(___tctx.PlaylistName) : null, (___ctx, __value) => { if(___ctx is global::Stylophone.Views.AddToPlaylistDialog ___tctx) ___tctx.PlaylistName = (string)global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(string), __value); } , new [] {"PlaylistName"})));
														c2.SetBinding(global::Windows.UI.Xaml.Controls.TextBox.VisibilityProperty, new Windows.UI.Xaml.Data.Binding{ Mode = global::Windows.UI.Xaml.Data.BindingMode.OneWay/* Windows.UI.Xaml.Data.BindingMode/Windows.UI.Xaml.Data.BindingMode, OneWay, Bind/Mode */, Converter = (global::Uno.UI.ResourceResolverSingleton.Instance.ResolveResourceStatic("BoolToVisibilityConverter", out var staticResourceResolverOutputIndex3, context: global::Stylophone.Skia.Wpf.GlobalStaticResources.__ParseContext_) ? ((staticResourceResolverOutputIndex3 as global::Windows.UI.Xaml.Data.IValueConverter) ?? default(global::Windows.UI.Xaml.Data.IValueConverter)) : default(global::Windows.UI.Xaml.Data.IValueConverter)),  }.Apply(___b =>  /*defaultBindModeOneTime*/ global::Uno.UI.Xaml.BindingHelper.SetBindingXBindProvider(___b, this, ___ctx => ___ctx is global::Stylophone.Views.AddToPlaylistDialog ___tctx ? (object)(___tctx.AddNewPlaylist) : null, null , new [] {"AddNewPlaylist"})));
														this._component_2 = c2;
							global::Uno.UI.FrameworkElementHelper.SetBaseUri(c2, "file:///E:/Projects/MpcNET2/Sources/Stylophone/Stylophone.Shared/Views/Dialogs/AddToPlaylistDialog.xaml");
							c2.CreationComplete();
						}
						))
						,
					}
				}
				.AddToPlaylistDialog_42180170550814ab8e4f401a0db75888_XamlApply((AddToPlaylistDialog_42180170550814ab8e4f401a0db75888XamlApplyExtensions.XamlApplyHandler3)(c3 => 
				{
					global::Uno.UI.FrameworkElementHelper.SetBaseUri(c3, "file:///E:/Projects/MpcNET2/Sources/Stylophone/Stylophone.Shared/Views/Dialogs/AddToPlaylistDialog.xaml");
					c3.CreationComplete();
				}
				))
				,
			}
			.AddToPlaylistDialog_42180170550814ab8e4f401a0db75888_XamlApply((AddToPlaylistDialog_42180170550814ab8e4f401a0db75888XamlApplyExtensions.XamlApplyHandler4)(c4 => 
			{
				global::Uno.UI.FrameworkElementHelper.SetBaseUri(c4, "file:///E:/Projects/MpcNET2/Sources/Stylophone/Stylophone.Shared/Views/Dialogs/AddToPlaylistDialog.xaml");
				c4.CreationComplete();
			}
			))
			;
			
			this
			.Apply((c5 => 
			{
				// Source E:\Projects\MpcNET2\Sources\Stylophone\Stylophone.Shared\Views\Dialogs\AddToPlaylistDialog.xaml (Line 1:2)
				
				// WARNING Property c5.base does not exist on {http://schemas.microsoft.com/winfx/2006/xaml/presentation}ContentDialog, the namespace is http://www.w3.org/XML/1998/namespace. This error was considered irrelevant by the XamlFileGenerator
			}
			))
			.Apply((c6 => 
			{
				// Class Stylophone.Views.AddToPlaylistDialog
				global::Uno.UI.Helpers.MarkupHelper.SetXUid(c6, "AddToPlaylistDialog");
				global::Uno.UI.FrameworkElementHelper.SetBaseUri(c6, "file:///E:/Projects/MpcNET2/Sources/Stylophone/Stylophone.Shared/Views/Dialogs/AddToPlaylistDialog.xaml");
				c6.CreationComplete();
			}
			))
			;
			OnInitializeCompleted();
			InitializeXamlOwner();
			Bindings = new AddToPlaylistDialog_Bindings(this);
			Loading += delegate
			{
				Bindings.Update();
				_component_0.UpdateResourceBindings();
				_component_1.UpdateResourceBindings();
				_component_2.UpdateResourceBindings();
			}
			;
		}
		partial void OnInitializeCompleted();
		private global::Windows.UI.Xaml.Controls.ComboBox _component_0;
		private global::Windows.UI.Xaml.Controls.CheckBox _component_1;
		private global::Windows.UI.Xaml.Controls.TextBox _component_2;
		private interface IAddToPlaylistDialog_Bindings
		{
			void Initialize();
			void Update();
			void StopTracking();
		}
		#pragma warning disable 0169 //  Suppress unused field warning in case Bindings is not used.
		private IAddToPlaylistDialog_Bindings Bindings;
		#pragma warning restore 0169
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		private class AddToPlaylistDialog_Bindings : IAddToPlaylistDialog_Bindings
		{
			#if UNO_HAS_UIELEMENT_IMPLICIT_PINNING
			private global::System.WeakReference _ownerReference;
			private AddToPlaylistDialog Owner { get => (AddToPlaylistDialog)_ownerReference?.Target; set => _ownerReference = new global::System.WeakReference(value); }
			#else
			private AddToPlaylistDialog Owner { get; set; }
			#endif
			public AddToPlaylistDialog_Bindings(AddToPlaylistDialog owner)
			{
				Owner = owner;
			}
			void IAddToPlaylistDialog_Bindings.Initialize()
			{
			}
			void IAddToPlaylistDialog_Bindings.Update()
			{
				var owner = Owner;
				owner._component_0.ApplyXBind();
				owner._component_1.ApplyXBind();
				owner._component_2.ApplyXBind();
			}
			void IAddToPlaylistDialog_Bindings.StopTracking()
			{
			}
		}
		private void InitializeXamlOwner()
		{
		}
	}
}
namespace Stylophone.Skia.Wpf
{
	static class AddToPlaylistDialog_42180170550814ab8e4f401a0db75888XamlApplyExtensions
	{
		public delegate void XamlApplyHandler0(global::Windows.UI.Xaml.Controls.ComboBox instance);
		[System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
		public static global::Windows.UI.Xaml.Controls.ComboBox AddToPlaylistDialog_42180170550814ab8e4f401a0db75888_XamlApply(this global::Windows.UI.Xaml.Controls.ComboBox instance, XamlApplyHandler0 handler)
		{
			handler(instance);
			return instance;
		}
		public delegate void XamlApplyHandler1(global::Windows.UI.Xaml.Controls.CheckBox instance);
		[System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
		public static global::Windows.UI.Xaml.Controls.CheckBox AddToPlaylistDialog_42180170550814ab8e4f401a0db75888_XamlApply(this global::Windows.UI.Xaml.Controls.CheckBox instance, XamlApplyHandler1 handler)
		{
			handler(instance);
			return instance;
		}
		public delegate void XamlApplyHandler2(global::Windows.UI.Xaml.Controls.TextBox instance);
		[System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
		public static global::Windows.UI.Xaml.Controls.TextBox AddToPlaylistDialog_42180170550814ab8e4f401a0db75888_XamlApply(this global::Windows.UI.Xaml.Controls.TextBox instance, XamlApplyHandler2 handler)
		{
			handler(instance);
			return instance;
		}
		public delegate void XamlApplyHandler3(global::Windows.UI.Xaml.Controls.StackPanel instance);
		[System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
		public static global::Windows.UI.Xaml.Controls.StackPanel AddToPlaylistDialog_42180170550814ab8e4f401a0db75888_XamlApply(this global::Windows.UI.Xaml.Controls.StackPanel instance, XamlApplyHandler3 handler)
		{
			handler(instance);
			return instance;
		}
		public delegate void XamlApplyHandler4(global::Windows.UI.Xaml.Controls.ScrollViewer instance);
		[System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
		public static global::Windows.UI.Xaml.Controls.ScrollViewer AddToPlaylistDialog_42180170550814ab8e4f401a0db75888_XamlApply(this global::Windows.UI.Xaml.Controls.ScrollViewer instance, XamlApplyHandler4 handler)
		{
			handler(instance);
			return instance;
		}
	}
}
