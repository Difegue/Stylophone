#pragma checksum "E:\Projects\MpcNET2\Sources\Stylophone\Stylophone.Shared\Views\LibraryDetailPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "B8F3FDF3447EB43CDDEEDFF02568C865"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Stylophone.Views
{
    partial class LibraryDetailPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ProgressRing_IsActive(global::Windows.UI.Xaml.Controls.ProgressRing obj, global::System.Boolean value)
            {
                obj.IsActive = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ToolTipService_ToolTip(global::Windows.UI.Xaml.DependencyObject obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                global::Windows.UI.Xaml.Controls.ToolTipService.SetToolTip(obj, value);
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Source = value;
            }
            public static void Set_Windows_UI_Xaml_Media_ImageBrush_ImageSource(global::Windows.UI.Xaml.Media.ImageBrush obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.ImageSource = value;
            }
            public static void Set_Windows_UI_Xaml_Media_XamlCompositionBrushBase_FallbackColor(global::Windows.UI.Xaml.Media.XamlCompositionBrushBase obj, global::Windows.UI.Color value)
            {
                obj.FallbackColor = value;
            }
            public static void Set_Windows_UI_Xaml_Media_AcrylicBrush_TintColor(global::Windows.UI.Xaml.Media.AcrylicBrush obj, global::Windows.UI.Color value)
            {
                obj.TintColor = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class LibraryDetailPage_obj3_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ILibraryDetailPage_Bindings
        {
            private global::Stylophone.ViewModels.Items.TrackViewModel dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj3;
            private global::Windows.UI.Xaml.Controls.TextBlock obj4;
            private global::Windows.UI.Xaml.Controls.TextBlock obj5;
            private global::Windows.UI.Xaml.Controls.TextBlock obj6;
            private global::Windows.UI.Xaml.Controls.TextBlock obj7;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj4TextDisabled = false;
            private static bool isobj4ToolTipDisabled = false;
            private static bool isobj5TextDisabled = false;
            private static bool isobj5ToolTipDisabled = false;
            private static bool isobj6TextDisabled = false;
            private static bool isobj6ToolTipDisabled = false;
            private static bool isobj7TextDisabled = false;
            private static bool isobj7ToolTipDisabled = false;

            private LibraryDetailPage_obj3_BindingsTracking bindingsTracking;

            public LibraryDetailPage_obj3_Bindings()
            {
                this.bindingsTracking = new LibraryDetailPage_obj3_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 43 && columnNumber == 21)
                {
                    isobj4TextDisabled = true;
                }
                else if (lineNumber == 45 && columnNumber == 21)
                {
                    isobj4ToolTipDisabled = true;
                }
                else if (lineNumber == 52 && columnNumber == 21)
                {
                    isobj5TextDisabled = true;
                }
                else if (lineNumber == 54 && columnNumber == 21)
                {
                    isobj5ToolTipDisabled = true;
                }
                else if (lineNumber == 60 && columnNumber == 21)
                {
                    isobj6TextDisabled = true;
                }
                else if (lineNumber == 61 && columnNumber == 21)
                {
                    isobj6ToolTipDisabled = true;
                }
                else if (lineNumber == 38 && columnNumber == 48)
                {
                    isobj7TextDisabled = true;
                }
                else if (lineNumber == 38 && columnNumber == 69)
                {
                    isobj7ToolTipDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // Views\LibraryDetailPage.xaml line 25
                        this.obj3 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 4: // Views\LibraryDetailPage.xaml line 42
                        this.obj4 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 5: // Views\LibraryDetailPage.xaml line 51
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 6: // Views\LibraryDetailPage.xaml line 59
                        this.obj6 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 7: // Views\LibraryDetailPage.xaml line 38
                        this.obj7 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj3.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::Stylophone.ViewModels.Items.TrackViewModel) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // ILibraryDetailPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Stylophone.ViewModels.Items.TrackViewModel)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Stylophone.ViewModels.Items.TrackViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_File(obj.File, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_File(global::MpcNET.Types.IMpdFile obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_File_Artist(obj.Artist, phase);
                        this.Update_File_Album(obj.Album, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_File_Time(obj.Time, phase);
                    }
                }
            }
            private void Update_File_Artist(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\LibraryDetailPage.xaml line 42
                    if (!isobj4TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj4, obj, null);
                    }
                    // Views\LibraryDetailPage.xaml line 42
                    if (!isobj4ToolTipDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ToolTipService_ToolTip(this.obj4, obj, null);
                    }
                }
            }
            private void Update_File_Album(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\LibraryDetailPage.xaml line 51
                    if (!isobj5TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj5, obj, null);
                    }
                    // Views\LibraryDetailPage.xaml line 51
                    if (!isobj5ToolTipDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ToolTipService_ToolTip(this.obj5, obj, null);
                    }
                }
            }
            private void Update_File_Time(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LibraryDetailPage.xaml line 59
                    if (!isobj6TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj6, (global::System.String)this.LookupConverter("SecondsToTimeConverter").Convert(obj, typeof(global::System.String), null, null), null);
                    }
                    // Views\LibraryDetailPage.xaml line 59
                    if (!isobj6ToolTipDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ToolTipService_ToolTip(this.obj6, (global::System.Object)this.LookupConverter("SecondsToTimeConverter").Convert(obj, typeof(global::System.Object), null, null), null);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\LibraryDetailPage.xaml line 38
                    if (!isobj7TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj7, obj, null);
                    }
                    // Views\LibraryDetailPage.xaml line 38
                    if (!isobj7ToolTipDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ToolTipService_ToolTip(this.obj7, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class LibraryDetailPage_obj3_BindingsTracking
            {
                private global::System.WeakReference<LibraryDetailPage_obj3_Bindings> weakRefToBindingObj; 

                public LibraryDetailPage_obj3_BindingsTracking(LibraryDetailPage_obj3_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<LibraryDetailPage_obj3_Bindings>(obj);
                }

                public LibraryDetailPage_obj3_Bindings TryGetBindingObject()
                {
                    LibraryDetailPage_obj3_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    LibraryDetailPage_obj3_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Stylophone.ViewModels.Items.TrackViewModel obj = sender as global::Stylophone.ViewModels.Items.TrackViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_File(obj.File, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "File":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_File(obj.File, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::Stylophone.ViewModels.Items.TrackViewModel obj)
                {
                    LibraryDetailPage_obj3_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class LibraryDetailPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ILibraryDetailPage_Bindings
        {
            private global::Stylophone.Views.LibraryDetailPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Stylophone.Helpers.AlternatingRowListView obj9;
            private global::Windows.UI.Xaml.Controls.ProgressRing obj10;
            private global::Windows.UI.Xaml.Controls.Border obj13;
            private global::Windows.UI.Xaml.Controls.TextBlock obj15;
            private global::Windows.UI.Xaml.Controls.TextBlock obj16;
            private global::Windows.UI.Xaml.Controls.TextBlock obj17;
            private global::Windows.UI.Xaml.Controls.Button obj19;
            private global::Windows.UI.Xaml.Controls.Button obj20;
            private global::Windows.UI.Xaml.Controls.Button obj21;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj22;
            private global::Windows.UI.Xaml.Media.ImageBrush obj23;
            private global::Windows.UI.Xaml.Media.AcrylicBrush obj24;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj9ItemsSourceDisabled = false;
            private static bool isobj10IsActiveDisabled = false;
            private static bool isobj13VisibilityDisabled = false;
            private static bool isobj15ToolTipDisabled = false;
            private static bool isobj15TextDisabled = false;
            private static bool isobj16ToolTipDisabled = false;
            private static bool isobj16TextDisabled = false;
            private static bool isobj17TextDisabled = false;
            private static bool isobj19CommandDisabled = false;
            private static bool isobj19IsEnabledDisabled = false;
            private static bool isobj20CommandDisabled = false;
            private static bool isobj20IsEnabledDisabled = false;
            private static bool isobj21CommandDisabled = false;
            private static bool isobj21IsEnabledDisabled = false;
            private static bool isobj22SourceDisabled = false;
            private static bool isobj23ImageSourceDisabled = false;
            private static bool isobj24FallbackColorDisabled = false;
            private static bool isobj24TintColorDisabled = false;

            private LibraryDetailPage_obj1_BindingsTracking bindingsTracking;

            public LibraryDetailPage_obj1_Bindings()
            {
                this.bindingsTracking = new LibraryDetailPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 102 && columnNumber == 23)
                {
                    isobj9ItemsSourceDisabled = true;
                }
                else if (lineNumber == 235 && columnNumber == 29)
                {
                    isobj10IsActiveDisabled = true;
                }
                else if (lineNumber == 143 && columnNumber == 29)
                {
                    isobj13VisibilityDisabled = true;
                }
                else if (lineNumber == 184 && columnNumber == 25)
                {
                    isobj15ToolTipDisabled = true;
                }
                else if (lineNumber == 185 && columnNumber == 25)
                {
                    isobj15TextDisabled = true;
                }
                else if (lineNumber == 188 && columnNumber == 32)
                {
                    isobj16ToolTipDisabled = true;
                }
                else if (lineNumber == 189 && columnNumber == 80)
                {
                    isobj16TextDisabled = true;
                }
                else if (lineNumber == 192 && columnNumber == 93)
                {
                    isobj17TextDisabled = true;
                }
                else if (lineNumber == 199 && columnNumber == 80)
                {
                    isobj19CommandDisabled = true;
                }
                else if (lineNumber == 200 && columnNumber == 37)
                {
                    isobj19IsEnabledDisabled = true;
                }
                else if (lineNumber == 206 && columnNumber == 102)
                {
                    isobj20CommandDisabled = true;
                }
                else if (lineNumber == 207 && columnNumber == 37)
                {
                    isobj20IsEnabledDisabled = true;
                }
                else if (lineNumber == 214 && columnNumber == 80)
                {
                    isobj21CommandDisabled = true;
                }
                else if (lineNumber == 215 && columnNumber == 37)
                {
                    isobj21IsEnabledDisabled = true;
                }
                else if (lineNumber == 173 && columnNumber == 46)
                {
                    isobj22SourceDisabled = true;
                }
                else if (lineNumber == 156 && columnNumber == 45)
                {
                    isobj23ImageSourceDisabled = true;
                }
                else if (lineNumber == 131 && columnNumber == 93)
                {
                    isobj24FallbackColorDisabled = true;
                }
                else if (lineNumber == 132 && columnNumber == 47)
                {
                    isobj24TintColorDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 9: // Views\LibraryDetailPage.xaml line 94
                        this.obj9 = (global::Stylophone.Helpers.AlternatingRowListView)target;
                        break;
                    case 10: // Views\LibraryDetailPage.xaml line 234
                        this.obj10 = (global::Windows.UI.Xaml.Controls.ProgressRing)target;
                        break;
                    case 13: // Views\LibraryDetailPage.xaml line 136
                        this.obj13 = (global::Windows.UI.Xaml.Controls.Border)target;
                        break;
                    case 15: // Views\LibraryDetailPage.xaml line 177
                        this.obj15 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 16: // Views\LibraryDetailPage.xaml line 187
                        this.obj16 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 17: // Views\LibraryDetailPage.xaml line 191
                        this.obj17 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 19: // Views\LibraryDetailPage.xaml line 199
                        this.obj19 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 20: // Views\LibraryDetailPage.xaml line 206
                        this.obj20 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 21: // Views\LibraryDetailPage.xaml line 214
                        this.obj21 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 22: // Views\LibraryDetailPage.xaml line 172
                        this.obj22 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 23: // Views\LibraryDetailPage.xaml line 156
                        this.obj23 = (global::Windows.UI.Xaml.Media.ImageBrush)target;
                        break;
                    case 24: // Views\LibraryDetailPage.xaml line 131
                        this.obj24 = (global::Windows.UI.Xaml.Media.AcrylicBrush)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ILibraryDetailPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Stylophone.Views.LibraryDetailPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Stylophone.Views.LibraryDetailPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::Stylophone.ViewModels.AlbumDetailViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Source(obj.Source, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Item(obj.Item, phase);
                        this.Update_ViewModel_PlaylistInfo(obj.PlaylistInfo, phase);
                    }
                }
            }
            private void Update_ViewModel_Source(global::System.Collections.ObjectModel.ObservableCollection<global::Stylophone.ViewModels.Items.TrackViewModel> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\LibraryDetailPage.xaml line 94
                    if (!isobj9ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj9, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Item(global::Stylophone.ViewModels.Items.AlbumViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Item(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Item_IsDetailLoading(obj.IsDetailLoading, phase);
                        this.Update_ViewModel_Item_IsLight(obj.IsLight, phase);
                        this.Update_ViewModel_Item_Name(obj.Name, phase);
                        this.Update_ViewModel_Item_Artist(obj.Artist, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Item_PlayAlbumCommand(obj.PlayAlbumCommand, phase);
                        this.Update_ViewModel_Item_AddAlbumCommand(obj.AddAlbumCommand, phase);
                        this.Update_ViewModel_Item_AddToPlaylistCommand(obj.AddToPlaylistCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Item_AlbumArt(obj.AlbumArt, phase);
                        this.Update_ViewModel_Item_DominantColor(obj.DominantColor, phase);
                    }
                }
            }
            private void Update_ViewModel_Item_IsDetailLoading(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LibraryDetailPage.xaml line 234
                    if (!isobj10IsActiveDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ProgressRing_IsActive(this.obj10, obj);
                    }
                    // Views\LibraryDetailPage.xaml line 199
                    if (!isobj19IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj19, (global::System.Boolean)this.LookupConverter("BoolNegationConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    }
                    // Views\LibraryDetailPage.xaml line 206
                    if (!isobj20IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj20, (global::System.Boolean)this.LookupConverter("BoolNegationConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    }
                    // Views\LibraryDetailPage.xaml line 214
                    if (!isobj21IsEnabledDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled(this.obj21, (global::System.Boolean)this.LookupConverter("BoolNegationConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                    }
                }
            }
            private void Update_ViewModel_Item_IsLight(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LibraryDetailPage.xaml line 136
                    if (!isobj13VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj13, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_ViewModel_Item_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LibraryDetailPage.xaml line 177
                    if (!isobj15ToolTipDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ToolTipService_ToolTip(this.obj15, obj, null);
                    }
                    // Views\LibraryDetailPage.xaml line 177
                    if (!isobj15TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj15, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Item_Artist(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LibraryDetailPage.xaml line 187
                    if (!isobj16ToolTipDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ToolTipService_ToolTip(this.obj16, obj, null);
                    }
                    // Views\LibraryDetailPage.xaml line 187
                    if (!isobj16TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj16, obj, null);
                    }
                }
            }
            private void Update_ViewModel_PlaylistInfo(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LibraryDetailPage.xaml line 191
                    if (!isobj17TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj17, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Item_PlayAlbumCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\LibraryDetailPage.xaml line 199
                    if (!isobj19CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj19, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Item_AddAlbumCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\LibraryDetailPage.xaml line 206
                    if (!isobj20CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj20, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Item_AddToPlaylistCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\LibraryDetailPage.xaml line 214
                    if (!isobj21CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj21, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Item_AlbumArt(global::Windows.UI.Xaml.Media.Imaging.BitmapImage obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LibraryDetailPage.xaml line 172
                    if (!isobj22SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj22, obj, null);
                    }
                    // Views\LibraryDetailPage.xaml line 156
                    if (!isobj23ImageSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_ImageBrush_ImageSource(this.obj23, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Item_DominantColor(global::Windows.UI.Color obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\LibraryDetailPage.xaml line 131
                    if (!isobj24FallbackColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_XamlCompositionBrushBase_FallbackColor(this.obj24, obj);
                    }
                    // Views\LibraryDetailPage.xaml line 131
                    if (!isobj24TintColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_AcrylicBrush_TintColor(this.obj24, obj);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class LibraryDetailPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<LibraryDetailPage_obj1_Bindings> weakRefToBindingObj; 

                public LibraryDetailPage_obj1_BindingsTracking(LibraryDetailPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<LibraryDetailPage_obj1_Bindings>(obj);
                }

                public LibraryDetailPage_obj1_Bindings TryGetBindingObject()
                {
                    LibraryDetailPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_Item(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    LibraryDetailPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Stylophone.ViewModels.AlbumDetailViewModel obj = sender as global::Stylophone.ViewModels.AlbumDetailViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Item(obj.Item, DATA_CHANGED);
                                bindings.Update_ViewModel_PlaylistInfo(obj.PlaylistInfo, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Item":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Item(obj.Item, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PlaylistInfo":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_PlaylistInfo(obj.PlaylistInfo, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Stylophone.ViewModels.AlbumDetailViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::Stylophone.ViewModels.AlbumDetailViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Item(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    LibraryDetailPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Stylophone.ViewModels.Items.AlbumViewModel obj = sender as global::Stylophone.ViewModels.Items.AlbumViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Item_IsDetailLoading(obj.IsDetailLoading, DATA_CHANGED);
                                bindings.Update_ViewModel_Item_IsLight(obj.IsLight, DATA_CHANGED);
                                bindings.Update_ViewModel_Item_Name(obj.Name, DATA_CHANGED);
                                bindings.Update_ViewModel_Item_Artist(obj.Artist, DATA_CHANGED);
                                bindings.Update_ViewModel_Item_AlbumArt(obj.AlbumArt, DATA_CHANGED);
                                bindings.Update_ViewModel_Item_DominantColor(obj.DominantColor, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsDetailLoading":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Item_IsDetailLoading(obj.IsDetailLoading, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsLight":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Item_IsLight(obj.IsLight, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Item_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Artist":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Item_Artist(obj.Artist, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "AlbumArt":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Item_AlbumArt(obj.AlbumArt, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DominantColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Item_DominantColor(obj.DominantColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Stylophone.ViewModels.Items.AlbumViewModel cache_ViewModel_Item = null;
                public void UpdateChildListeners_ViewModel_Item(global::Stylophone.ViewModels.Items.AlbumViewModel obj)
                {
                    if (obj != cache_ViewModel_Item)
                    {
                        if (cache_ViewModel_Item != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Item).PropertyChanged -= PropertyChanged_ViewModel_Item;
                            cache_ViewModel_Item = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Item = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Item;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 8: // Views\LibraryDetailPage.xaml line 71
                {
                    this.ContentArea = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 9: // Views\LibraryDetailPage.xaml line 94
                {
                    this.QueueList = (global::Stylophone.Helpers.AlternatingRowListView)(target);
                    ((global::Stylophone.Helpers.AlternatingRowListView)this.QueueList).DoubleTapped += this.Queue_Track;
                }
                break;
            case 11: // Views\LibraryDetailPage.xaml line 109
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyout element11 = (global::Windows.UI.Xaml.Controls.MenuFlyout)(target);
                    ((global::Windows.UI.Xaml.Controls.MenuFlyout)element11).Opening += this.MenuFlyout_Opening;
                }
                break;
            case 12: // Views\LibraryDetailPage.xaml line 122
                {
                    this.Header = (global::Windows.UI.Xaml.Controls.RelativePanel)(target);
                }
                break;
            case 14: // Views\LibraryDetailPage.xaml line 160
                {
                    this.itemHero = (global::Microsoft.Toolkit.Uwp.UI.Controls.DropShadowPanel)(target);
                }
                break;
            case 15: // Views\LibraryDetailPage.xaml line 177
                {
                    this.title = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 16: // Views\LibraryDetailPage.xaml line 187
                {
                    this.artist = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 17: // Views\LibraryDetailPage.xaml line 191
                {
                    this.info = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 18: // Views\LibraryDetailPage.xaml line 196
                {
                    this.propertiesGroup1 = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 20: // Views\LibraryDetailPage.xaml line 206
                {
                    this.AddToQButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\LibraryDetailPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    LibraryDetailPage_obj1_Bindings bindings = new LibraryDetailPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 3: // Views\LibraryDetailPage.xaml line 25
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element3 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    LibraryDetailPage_obj3_Bindings bindings = new LibraryDetailPage_obj3_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element3.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element3.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element3, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element3, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

