#pragma checksum "E:\Projects\MpcNET2\Sources\Stylophone\Stylophone.Shared\Views\Playback\OverlayView.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "320C2D4100D02000945620E508912BD9"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Stylophone.Views
{
    partial class OverlayView : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Source = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_RangeBase_Value(global::Windows.UI.Xaml.Controls.Primitives.RangeBase obj, global::System.Double value)
            {
                obj.Value = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_RangeBase_Maximum(global::Windows.UI.Xaml.Controls.Primitives.RangeBase obj, global::System.Double value)
            {
                obj.Maximum = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_Background(global::Windows.UI.Xaml.Controls.Control obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Background = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class OverlayView_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IOverlayView_Bindings
        {
            private global::Stylophone.Views.OverlayView dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj2;
            private global::Windows.UI.Xaml.Controls.TextBlock obj3;
            private global::Windows.UI.Xaml.Controls.TextBlock obj4;
            private global::Windows.UI.Xaml.Controls.Slider obj5;
            private global::Windows.UI.Xaml.Controls.Button obj6;
            private global::Windows.UI.Xaml.Controls.Button obj7;
            private global::Windows.UI.Xaml.Controls.Button obj8;
            private global::Windows.UI.Xaml.Controls.Button obj9;
            private global::Windows.UI.Xaml.Controls.Button obj10;
            private global::Windows.UI.Xaml.Controls.TextBlock obj11;
            private global::Windows.UI.Xaml.Controls.TextBlock obj12;
            private global::Windows.UI.Xaml.Controls.TextBlock obj13;
            private global::Windows.UI.Xaml.Controls.TextBlock obj14;
            private global::Windows.UI.Xaml.Controls.Button obj15;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler obj5ManipulationStarting;
            private global::Windows.UI.Xaml.Input.PointerEventHandler obj5PointerCaptureLost;
            private global::Windows.UI.Xaml.RoutedEventHandler obj6Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj7Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj8Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj9Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj10Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj15Click;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2SourceDisabled = false;
            private static bool isobj3TextDisabled = false;
            private static bool isobj4TextDisabled = false;
            private static bool isobj5ValueDisabled = false;
            private static bool isobj5MaximumDisabled = false;
            private static bool isobj6BackgroundDisabled = false;
            private static bool isobj10BackgroundDisabled = false;
            private static bool isobj11TextDisabled = false;
            private static bool isobj12TextDisabled = false;
            private static bool isobj13TextDisabled = false;
            private static bool isobj14TextDisabled = false;

            private OverlayView_obj1_BindingsTracking bindingsTracking;

            public OverlayView_obj1_Bindings()
            {
                this.bindingsTracking = new OverlayView_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 28 && columnNumber == 27)
                {
                    isobj2SourceDisabled = true;
                }
                else if (lineNumber == 59 && columnNumber == 24)
                {
                    isobj3TextDisabled = true;
                }
                else if (lineNumber == 67 && columnNumber == 24)
                {
                    isobj4TextDisabled = true;
                }
                else if (lineNumber == 101 && columnNumber == 21)
                {
                    isobj5ValueDisabled = true;
                }
                else if (lineNumber == 102 && columnNumber == 21)
                {
                    isobj5MaximumDisabled = true;
                }
                else if (lineNumber == 96 && columnNumber == 21)
                {
                    this.obj5.ManipulationStarting -= obj5ManipulationStarting;
                }
                else if (lineNumber == 97 && columnNumber == 21)
                {
                    this.obj5.PointerCaptureLost -= obj5PointerCaptureLost;
                }
                else if (lineNumber == 112 && columnNumber == 25)
                {
                    isobj6BackgroundDisabled = true;
                }
                else if (lineNumber == 113 && columnNumber == 25)
                {
                    this.obj6.Click -= obj6Click;
                }
                else if (lineNumber == 127 && columnNumber == 25)
                {
                    this.obj7.Click -= obj7Click;
                }
                else if (lineNumber == 141 && columnNumber == 25)
                {
                    this.obj8.Click -= obj8Click;
                }
                else if (lineNumber == 155 && columnNumber == 25)
                {
                    this.obj9.Click -= obj9Click;
                }
                else if (lineNumber == 169 && columnNumber == 25)
                {
                    isobj10BackgroundDisabled = true;
                }
                else if (lineNumber == 170 && columnNumber == 25)
                {
                    this.obj10.Click -= obj10Click;
                }
                else if (lineNumber == 173 && columnNumber == 36)
                {
                    isobj11TextDisabled = true;
                }
                else if (lineNumber == 144 && columnNumber == 36)
                {
                    isobj12TextDisabled = true;
                }
                else if (lineNumber == 79 && columnNumber == 28)
                {
                    isobj13TextDisabled = true;
                }
                else if (lineNumber == 86 && columnNumber == 28)
                {
                    isobj14TextDisabled = true;
                }
                else if (lineNumber == 47 && columnNumber == 21)
                {
                    this.obj15.Click -= obj15Click;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\Playback\OverlayView.xaml line 28
                        this.obj2 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 3: // Views\Playback\OverlayView.xaml line 59
                        this.obj3 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 4: // Views\Playback\OverlayView.xaml line 67
                        this.obj4 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 5: // Views\Playback\OverlayView.xaml line 94
                        this.obj5 = (global::Windows.UI.Xaml.Controls.Slider)target;
                        this.obj5ManipulationStarting = (global::System.Object p0, global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.OnPlayingSliderMoving();
                        };
                        ((global::Windows.UI.Xaml.Controls.Slider)target).ManipulationStarting += obj5ManipulationStarting;
                        this.obj5PointerCaptureLost = (global::System.Object p0, global::Windows.UI.Xaml.Input.PointerRoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.OnPlayingSliderChange();
                        };
                        ((global::Windows.UI.Xaml.Controls.Slider)target).PointerCaptureLost += obj5PointerCaptureLost;
                        this.bindingsTracking.RegisterTwoWayListener_5(this.obj5);
                        break;
                    case 6: // Views\Playback\OverlayView.xaml line 109
                        this.obj6 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj6Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.ToggleShuffle();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj6Click;
                        break;
                    case 7: // Views\Playback\OverlayView.xaml line 124
                        this.obj7 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj7Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.SkipPrevious();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj7Click;
                        break;
                    case 8: // Views\Playback\OverlayView.xaml line 138
                        this.obj8 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj8Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.ChangePlaybackState();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj8Click;
                        break;
                    case 9: // Views\Playback\OverlayView.xaml line 152
                        this.obj9 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj9Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.SkipNext();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj9Click;
                        break;
                    case 10: // Views\Playback\OverlayView.xaml line 166
                        this.obj10 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj10Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.ToggleRepeat();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj10Click;
                        break;
                    case 11: // Views\Playback\OverlayView.xaml line 173
                        this.obj11 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 12: // Views\Playback\OverlayView.xaml line 144
                        this.obj12 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 13: // Views\Playback\OverlayView.xaml line 76
                        this.obj13 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 14: // Views\Playback\OverlayView.xaml line 84
                        this.obj14 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 15: // Views\Playback\OverlayView.xaml line 44
                        this.obj15 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj15Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.NavigateToMainView();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj15Click;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IOverlayView_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Stylophone.Views.OverlayView)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Stylophone.Views.OverlayView obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PlaybackViewModel(obj.PlaybackViewModel, phase);
                    }
                }
            }
            private void Update_PlaybackViewModel(global::Stylophone.ViewModels.Playback.PlaybackViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_PlaybackViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PlaybackViewModel_CurrentTrack(obj.CurrentTrack, phase);
                        this.Update_PlaybackViewModel_CurrentTimeValue(obj.CurrentTimeValue, phase);
                        this.Update_PlaybackViewModel_MaxTimeValue(obj.MaxTimeValue, phase);
                        this.Update_PlaybackViewModel_IsShuffleEnabled(obj.IsShuffleEnabled, phase);
                        this.Update_PlaybackViewModel_IsRepeatEnabled(obj.IsRepeatEnabled, phase);
                        this.Update_PlaybackViewModel_RepeatIcon(obj.RepeatIcon, phase);
                        this.Update_PlaybackViewModel_PlayButtonContent(obj.PlayButtonContent, phase);
                        this.Update_PlaybackViewModel_TimeListened(obj.TimeListened, phase);
                        this.Update_PlaybackViewModel_TimeRemaining(obj.TimeRemaining, phase);
                    }
                }
            }
            private void Update_PlaybackViewModel_CurrentTrack(global::Stylophone.ViewModels.Items.TrackViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_PlaybackViewModel_CurrentTrack(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PlaybackViewModel_CurrentTrack_AlbumArt(obj.AlbumArt, phase);
                        this.Update_PlaybackViewModel_CurrentTrack_Name(obj.Name, phase);
                        this.Update_PlaybackViewModel_CurrentTrack_File(obj.File, phase);
                    }
                }
            }
            private void Update_PlaybackViewModel_CurrentTrack_AlbumArt(global::Windows.UI.Xaml.Media.Imaging.BitmapImage obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\OverlayView.xaml line 28
                    if (!isobj2SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj2, obj, null);
                    }
                }
            }
            private void Update_PlaybackViewModel_CurrentTrack_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\OverlayView.xaml line 59
                    if (!isobj3TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj3, obj, null);
                    }
                }
            }
            private void Update_PlaybackViewModel_CurrentTrack_File(global::MpcNET.Types.IMpdFile obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PlaybackViewModel_CurrentTrack_File_Artist(obj.Artist, phase);
                    }
                }
            }
            private void Update_PlaybackViewModel_CurrentTrack_File_Artist(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\OverlayView.xaml line 67
                    if (!isobj4TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj4, obj, null);
                    }
                }
            }
            private void Update_PlaybackViewModel_CurrentTimeValue(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\OverlayView.xaml line 94
                    if (!isobj5ValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj5, obj);
                    }
                }
            }
            private void Update_PlaybackViewModel_MaxTimeValue(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\OverlayView.xaml line 94
                    if (!isobj5MaximumDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_RangeBase_Maximum(this.obj5, obj);
                    }
                }
            }
            private void Update_PlaybackViewModel_IsShuffleEnabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\OverlayView.xaml line 109
                    if (!isobj6BackgroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Background(this.obj6, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("BoolToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_PlaybackViewModel_IsRepeatEnabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\OverlayView.xaml line 166
                    if (!isobj10BackgroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Background(this.obj10, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("BoolToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_PlaybackViewModel_RepeatIcon(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\OverlayView.xaml line 173
                    if (!isobj11TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj11, obj, null);
                    }
                }
            }
            private void Update_PlaybackViewModel_PlayButtonContent(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\OverlayView.xaml line 144
                    if (!isobj12TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj12, obj, null);
                    }
                }
            }
            private void Update_PlaybackViewModel_TimeListened(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\OverlayView.xaml line 76
                    if (!isobj13TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj13, obj, null);
                    }
                }
            }
            private void Update_PlaybackViewModel_TimeRemaining(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\OverlayView.xaml line 84
                    if (!isobj14TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj14, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_5_Value()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.PlaybackViewModel != null)
                        {
                            this.dataRoot.PlaybackViewModel.CurrentTimeValue = this.obj5.Value;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class OverlayView_obj1_BindingsTracking
            {
                private global::System.WeakReference<OverlayView_obj1_Bindings> weakRefToBindingObj; 

                public OverlayView_obj1_BindingsTracking(OverlayView_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<OverlayView_obj1_Bindings>(obj);
                }

                public OverlayView_obj1_Bindings TryGetBindingObject()
                {
                    OverlayView_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_PlaybackViewModel(null);
                    UpdateChildListeners_PlaybackViewModel_CurrentTrack(null);
                }

                public void PropertyChanged_PlaybackViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OverlayView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Stylophone.ViewModels.Playback.PlaybackViewModel obj = sender as global::Stylophone.ViewModels.Playback.PlaybackViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_PlaybackViewModel_CurrentTrack(obj.CurrentTrack, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_CurrentTimeValue(obj.CurrentTimeValue, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_MaxTimeValue(obj.MaxTimeValue, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_IsShuffleEnabled(obj.IsShuffleEnabled, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_IsRepeatEnabled(obj.IsRepeatEnabled, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_RepeatIcon(obj.RepeatIcon, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_PlayButtonContent(obj.PlayButtonContent, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_TimeListened(obj.TimeListened, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_TimeRemaining(obj.TimeRemaining, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "CurrentTrack":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_CurrentTrack(obj.CurrentTrack, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CurrentTimeValue":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_CurrentTimeValue(obj.CurrentTimeValue, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MaxTimeValue":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_MaxTimeValue(obj.MaxTimeValue, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsShuffleEnabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_IsShuffleEnabled(obj.IsShuffleEnabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsRepeatEnabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_IsRepeatEnabled(obj.IsRepeatEnabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RepeatIcon":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_RepeatIcon(obj.RepeatIcon, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PlayButtonContent":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_PlayButtonContent(obj.PlayButtonContent, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TimeListened":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_TimeListened(obj.TimeListened, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TimeRemaining":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_TimeRemaining(obj.TimeRemaining, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Stylophone.ViewModels.Playback.PlaybackViewModel cache_PlaybackViewModel = null;
                public void UpdateChildListeners_PlaybackViewModel(global::Stylophone.ViewModels.Playback.PlaybackViewModel obj)
                {
                    if (obj != cache_PlaybackViewModel)
                    {
                        if (cache_PlaybackViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_PlaybackViewModel).PropertyChanged -= PropertyChanged_PlaybackViewModel;
                            cache_PlaybackViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_PlaybackViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_PlaybackViewModel;
                        }
                    }
                }
                public void PropertyChanged_PlaybackViewModel_CurrentTrack(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    OverlayView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Stylophone.ViewModels.Items.TrackViewModel obj = sender as global::Stylophone.ViewModels.Items.TrackViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_PlaybackViewModel_CurrentTrack_AlbumArt(obj.AlbumArt, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_CurrentTrack_Name(obj.Name, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_CurrentTrack_File(obj.File, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "AlbumArt":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_CurrentTrack_AlbumArt(obj.AlbumArt, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_CurrentTrack_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "File":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_CurrentTrack_File(obj.File, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Stylophone.ViewModels.Items.TrackViewModel cache_PlaybackViewModel_CurrentTrack = null;
                public void UpdateChildListeners_PlaybackViewModel_CurrentTrack(global::Stylophone.ViewModels.Items.TrackViewModel obj)
                {
                    if (obj != cache_PlaybackViewModel_CurrentTrack)
                    {
                        if (cache_PlaybackViewModel_CurrentTrack != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_PlaybackViewModel_CurrentTrack).PropertyChanged -= PropertyChanged_PlaybackViewModel_CurrentTrack;
                            cache_PlaybackViewModel_CurrentTrack = null;
                        }
                        if (obj != null)
                        {
                            cache_PlaybackViewModel_CurrentTrack = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_PlaybackViewModel_CurrentTrack;
                        }
                    }
                }
                public void RegisterTwoWayListener_5(global::Windows.UI.Xaml.Controls.Slider sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_5_Value();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // Views\Playback\OverlayView.xaml line 1
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)(target);
                    ((global::Windows.UI.Xaml.Controls.Page)element1).Unloaded += this.Page_Unloaded;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\Playback\OverlayView.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    OverlayView_obj1_Bindings bindings = new OverlayView_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

