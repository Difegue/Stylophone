#pragma checksum "E:\Projects\MpcNET2\Sources\Stylophone\Stylophone.Shared\Views\Playback\PlaybackView.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "6B2CE3D6E46D8FF77A2859956D5DA3BC"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Stylophone.Views
{
    partial class PlaybackView : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Source = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class PlaybackView_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IPlaybackView_Bindings
        {
            private global::Stylophone.Views.PlaybackView dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj2;
            private global::Windows.UI.Xaml.Controls.StackPanel obj3;
            private global::Windows.UI.Xaml.Controls.TextBlock obj5;
            private global::Windows.UI.Xaml.Controls.TextBlock obj8;
            private global::Windows.UI.Xaml.Controls.TextBlock obj9;
            private global::Windows.UI.Xaml.Controls.TextBlock obj10;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj11;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2SourceDisabled = false;
            private static bool isobj3VisibilityDisabled = false;
            private static bool isobj5TextDisabled = false;
            private static bool isobj8TextDisabled = false;
            private static bool isobj9TextDisabled = false;
            private static bool isobj10TextDisabled = false;
            private static bool isobj11SourceDisabled = false;

            private PlaybackView_obj1_BindingsTracking bindingsTracking;

            public PlaybackView_obj1_Bindings()
            {
                this.bindingsTracking = new PlaybackView_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 40 && columnNumber == 28)
                {
                    isobj2SourceDisabled = true;
                }
                else if (lineNumber == 103 && columnNumber == 21)
                {
                    isobj3VisibilityDisabled = true;
                }
                else if (lineNumber == 109 && columnNumber == 24)
                {
                    isobj5TextDisabled = true;
                }
                else if (lineNumber == 74 && columnNumber == 28)
                {
                    isobj8TextDisabled = true;
                }
                else if (lineNumber == 83 && columnNumber == 28)
                {
                    isobj9TextDisabled = true;
                }
                else if (lineNumber == 91 && columnNumber == 28)
                {
                    isobj10TextDisabled = true;
                }
                else if (lineNumber == 69 && columnNumber == 39)
                {
                    isobj11SourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\Playback\PlaybackView.xaml line 39
                        this.obj2 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 3: // Views\Playback\PlaybackView.xaml line 102
                        this.obj3 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        break;
                    case 5: // Views\Playback\PlaybackView.xaml line 109
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 8: // Views\Playback\PlaybackView.xaml line 74
                        this.obj8 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 9: // Views\Playback\PlaybackView.xaml line 83
                        this.obj9 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 10: // Views\Playback\PlaybackView.xaml line 91
                        this.obj10 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 11: // Views\Playback\PlaybackView.xaml line 69
                        this.obj11 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IPlaybackView_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Stylophone.Views.PlaybackView)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Stylophone.Views.PlaybackView obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PlaybackViewModel(obj.PlaybackViewModel, phase);
                    }
                }
            }
            private void Update_PlaybackViewModel(global::Stylophone.ViewModels.Playback.PlaybackViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_PlaybackViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PlaybackViewModel_CurrentTrack(obj.CurrentTrack, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_PlaybackViewModel_HasNextTrack(obj.HasNextTrack, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PlaybackViewModel_NextTrack(obj.NextTrack, phase);
                    }
                }
            }
            private void Update_PlaybackViewModel_CurrentTrack(global::Stylophone.ViewModels.Items.TrackViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_PlaybackViewModel_CurrentTrack(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PlaybackViewModel_CurrentTrack_AlbumArt(obj.AlbumArt, phase);
                        this.Update_PlaybackViewModel_CurrentTrack_Name(obj.Name, phase);
                        this.Update_PlaybackViewModel_CurrentTrack_File(obj.File, phase);
                    }
                }
            }
            private void Update_PlaybackViewModel_CurrentTrack_AlbumArt(global::Windows.UI.Xaml.Media.Imaging.BitmapImage obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\PlaybackView.xaml line 39
                    if (!isobj2SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj2, obj, null);
                    }
                    // Views\Playback\PlaybackView.xaml line 69
                    if (!isobj11SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj11, obj, null);
                    }
                }
            }
            private void Update_PlaybackViewModel_HasNextTrack(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Playback\PlaybackView.xaml line 102
                    if (!isobj3VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj3, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_PlaybackViewModel_NextTrack(global::Stylophone.ViewModels.Items.TrackViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_PlaybackViewModel_NextTrack(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PlaybackViewModel_NextTrack_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_PlaybackViewModel_NextTrack_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\PlaybackView.xaml line 109
                    if (!isobj5TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj5, obj, null);
                    }
                }
            }
            private void Update_PlaybackViewModel_CurrentTrack_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\PlaybackView.xaml line 74
                    if (!isobj8TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj8, obj, null);
                    }
                }
            }
            private void Update_PlaybackViewModel_CurrentTrack_File(global::MpcNET.Types.IMpdFile obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PlaybackViewModel_CurrentTrack_File_Artist(obj.Artist, phase);
                        this.Update_PlaybackViewModel_CurrentTrack_File_Album(obj.Album, phase);
                    }
                }
            }
            private void Update_PlaybackViewModel_CurrentTrack_File_Artist(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\PlaybackView.xaml line 83
                    if (!isobj9TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj9, obj, null);
                    }
                }
            }
            private void Update_PlaybackViewModel_CurrentTrack_File_Album(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\PlaybackView.xaml line 91
                    if (!isobj10TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj10, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class PlaybackView_obj1_BindingsTracking
            {
                private global::System.WeakReference<PlaybackView_obj1_Bindings> weakRefToBindingObj; 

                public PlaybackView_obj1_BindingsTracking(PlaybackView_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<PlaybackView_obj1_Bindings>(obj);
                }

                public PlaybackView_obj1_Bindings TryGetBindingObject()
                {
                    PlaybackView_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_PlaybackViewModel(null);
                    UpdateChildListeners_PlaybackViewModel_CurrentTrack(null);
                    UpdateChildListeners_PlaybackViewModel_NextTrack(null);
                }

                public void PropertyChanged_PlaybackViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    PlaybackView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Stylophone.ViewModels.Playback.PlaybackViewModel obj = sender as global::Stylophone.ViewModels.Playback.PlaybackViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_PlaybackViewModel_CurrentTrack(obj.CurrentTrack, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_NextTrack(obj.NextTrack, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "CurrentTrack":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_CurrentTrack(obj.CurrentTrack, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "NextTrack":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_NextTrack(obj.NextTrack, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Stylophone.ViewModels.Playback.PlaybackViewModel cache_PlaybackViewModel = null;
                public void UpdateChildListeners_PlaybackViewModel(global::Stylophone.ViewModels.Playback.PlaybackViewModel obj)
                {
                    if (obj != cache_PlaybackViewModel)
                    {
                        if (cache_PlaybackViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_PlaybackViewModel).PropertyChanged -= PropertyChanged_PlaybackViewModel;
                            cache_PlaybackViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_PlaybackViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_PlaybackViewModel;
                        }
                    }
                }
                public void PropertyChanged_PlaybackViewModel_CurrentTrack(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    PlaybackView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Stylophone.ViewModels.Items.TrackViewModel obj = sender as global::Stylophone.ViewModels.Items.TrackViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_PlaybackViewModel_CurrentTrack_AlbumArt(obj.AlbumArt, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_CurrentTrack_Name(obj.Name, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_CurrentTrack_File(obj.File, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "AlbumArt":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_CurrentTrack_AlbumArt(obj.AlbumArt, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_CurrentTrack_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "File":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_CurrentTrack_File(obj.File, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Stylophone.ViewModels.Items.TrackViewModel cache_PlaybackViewModel_CurrentTrack = null;
                public void UpdateChildListeners_PlaybackViewModel_CurrentTrack(global::Stylophone.ViewModels.Items.TrackViewModel obj)
                {
                    if (obj != cache_PlaybackViewModel_CurrentTrack)
                    {
                        if (cache_PlaybackViewModel_CurrentTrack != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_PlaybackViewModel_CurrentTrack).PropertyChanged -= PropertyChanged_PlaybackViewModel_CurrentTrack;
                            cache_PlaybackViewModel_CurrentTrack = null;
                        }
                        if (obj != null)
                        {
                            cache_PlaybackViewModel_CurrentTrack = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_PlaybackViewModel_CurrentTrack;
                        }
                    }
                }
                public void PropertyChanged_PlaybackViewModel_NextTrack(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    PlaybackView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Stylophone.ViewModels.Items.TrackViewModel obj = sender as global::Stylophone.ViewModels.Items.TrackViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_PlaybackViewModel_NextTrack_Name(obj.Name, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_NextTrack_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Stylophone.ViewModels.Items.TrackViewModel cache_PlaybackViewModel_NextTrack = null;
                public void UpdateChildListeners_PlaybackViewModel_NextTrack(global::Stylophone.ViewModels.Items.TrackViewModel obj)
                {
                    if (obj != cache_PlaybackViewModel_NextTrack)
                    {
                        if (cache_PlaybackViewModel_NextTrack != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_PlaybackViewModel_NextTrack).PropertyChanged -= PropertyChanged_PlaybackViewModel_NextTrack;
                            cache_PlaybackViewModel_NextTrack = null;
                        }
                        if (obj != null)
                        {
                            cache_PlaybackViewModel_NextTrack = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_PlaybackViewModel_NextTrack;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // Views\Playback\PlaybackView.xaml line 1
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)(target);
                    ((global::Windows.UI.Xaml.Controls.Page)element1).Unloaded += this.Page_Unloaded;
                }
                break;
            case 4: // Views\Playback\PlaybackView.xaml line 105
                {
                    this.UpNext = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 5: // Views\Playback\PlaybackView.xaml line 109
                {
                    this.UpNextTitle = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 6: // Views\Playback\PlaybackView.xaml line 55
                {
                    this.AlbumArt = (global::Microsoft.Toolkit.Uwp.UI.Controls.DropShadowPanel)(target);
                }
                break;
            case 7: // Views\Playback\PlaybackView.xaml line 73
                {
                    this.AlbumInfo = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 9: // Views\Playback\PlaybackView.xaml line 83
                {
                    this.AlbumArtist = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 10: // Views\Playback\PlaybackView.xaml line 91
                {
                    this.AlbumName = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 12: // Views\Playback\PlaybackView.xaml line 122
                {
                    this.Normal = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\Playback\PlaybackView.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    PlaybackView_obj1_Bindings bindings = new PlaybackView_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

