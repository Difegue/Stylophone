#pragma checksum "E:\Projects\MpcNET2\Sources\Stylophone\Stylophone.Shared\Views\Playback\NowPlayingBar.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "8289FC2AD968062C85D20CD461ACB440"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Stylophone.Views
{
    partial class NowPlayingBar : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Source = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_Background(global::Windows.UI.Xaml.Controls.Control obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Background = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_MenuFlyoutItem_Command(global::Windows.UI.Xaml.Controls.MenuFlyoutItem obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_FontIcon_Glyph(global::Windows.UI.Xaml.Controls.FontIcon obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Glyph = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_RangeBase_Value(global::Windows.UI.Xaml.Controls.Primitives.RangeBase obj, global::System.Double value)
            {
                obj.Value = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_RangeBase_Maximum(global::Windows.UI.Xaml.Controls.Primitives.RangeBase obj, global::System.Double value)
            {
                obj.Maximum = value;
            }
            public static void Set_Windows_UI_Xaml_Media_XamlCompositionBrushBase_FallbackColor(global::Windows.UI.Xaml.Media.XamlCompositionBrushBase obj, global::Windows.UI.Color value)
            {
                obj.FallbackColor = value;
            }
            public static void Set_Windows_UI_Xaml_Media_AcrylicBrush_TintColor(global::Windows.UI.Xaml.Media.AcrylicBrush obj, global::Windows.UI.Color value)
            {
                obj.TintColor = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class NowPlayingBar_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            INowPlayingBar_Bindings
        {
            private global::Stylophone.Views.NowPlayingBar dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj3;
            private global::Windows.UI.Xaml.Controls.Border obj4;
            private global::Windows.UI.Xaml.Controls.Button obj5;
            private global::Windows.UI.Xaml.Controls.Button obj11;
            private global::Windows.UI.Xaml.Controls.MenuFlyoutItem obj13;
            private global::Windows.UI.Xaml.Controls.MenuFlyoutItem obj14;
            private global::Windows.UI.Xaml.Controls.MenuFlyoutItem obj16;
            private global::Windows.UI.Xaml.Controls.MenuFlyoutItem obj17;
            private global::Windows.UI.Xaml.Controls.MenuFlyoutItem obj18;
            private global::Windows.UI.Xaml.Controls.MenuFlyoutItem obj19;
            private global::Windows.UI.Xaml.Controls.FontIcon obj20;
            private global::Windows.UI.Xaml.Controls.TextBlock obj21;
            private global::Windows.UI.Xaml.Controls.Button obj22;
            private global::Windows.UI.Xaml.Controls.Slider obj23;
            private global::Windows.UI.Xaml.Controls.TextBlock obj24;
            private global::Windows.UI.Xaml.Controls.TextBlock obj25;
            private global::Windows.UI.Xaml.Controls.Button obj26;
            private global::Windows.UI.Xaml.Controls.Slider obj27;
            private global::Windows.UI.Xaml.Controls.TextBlock obj28;
            private global::Windows.UI.Xaml.Controls.TextBlock obj29;
            private global::Windows.UI.Xaml.Controls.Slider obj30;
            private global::Windows.UI.Xaml.Controls.TextBlock obj32;
            private global::Windows.UI.Xaml.Controls.Button obj33;
            private global::Windows.UI.Xaml.Controls.Button obj34;
            private global::Windows.UI.Xaml.Controls.Button obj35;
            private global::Windows.UI.Xaml.Controls.Button obj36;
            private global::Windows.UI.Xaml.Controls.Button obj37;
            private global::Windows.UI.Xaml.Controls.TextBlock obj38;
            private global::Windows.UI.Xaml.Controls.TextBlock obj39;
            private global::Windows.UI.Xaml.Controls.TextBlock obj42;
            private global::Windows.UI.Xaml.Controls.TextBlock obj43;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj44;
            private global::Windows.UI.Xaml.Media.AcrylicBrush obj45;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.RoutedEventHandler obj5Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj11Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj13Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj14Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj16Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj17Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj22Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj26Click;
            private global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler obj30ManipulationStarting;
            private global::Windows.UI.Xaml.Input.PointerEventHandler obj30PointerCaptureLost;
            private global::Windows.UI.Xaml.RoutedEventHandler obj33Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj34Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj35Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj36Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj37Click;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj3SourceDisabled = false;
            private static bool isobj4VisibilityDisabled = false;
            private static bool isobj5VisibilityDisabled = false;
            private static bool isobj13BackgroundDisabled = false;
            private static bool isobj14BackgroundDisabled = false;
            private static bool isobj18CommandDisabled = false;
            private static bool isobj19CommandDisabled = false;
            private static bool isobj20GlyphDisabled = false;
            private static bool isobj21TextDisabled = false;
            private static bool isobj23ValueDisabled = false;
            private static bool isobj24TextDisabled = false;
            private static bool isobj25TextDisabled = false;
            private static bool isobj27ValueDisabled = false;
            private static bool isobj28TextDisabled = false;
            private static bool isobj29TextDisabled = false;
            private static bool isobj30MaximumDisabled = false;
            private static bool isobj30ValueDisabled = false;
            private static bool isobj32TextDisabled = false;
            private static bool isobj33BackgroundDisabled = false;
            private static bool isobj37BackgroundDisabled = false;
            private static bool isobj38TextDisabled = false;
            private static bool isobj39TextDisabled = false;
            private static bool isobj42TextDisabled = false;
            private static bool isobj43TextDisabled = false;
            private static bool isobj44SourceDisabled = false;
            private static bool isobj45FallbackColorDisabled = false;
            private static bool isobj45TintColorDisabled = false;

            private NowPlayingBar_obj1_BindingsTracking bindingsTracking;

            public NowPlayingBar_obj1_Bindings()
            {
                this.bindingsTracking = new NowPlayingBar_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 47 && columnNumber == 13)
                {
                    isobj3SourceDisabled = true;
                }
                else if (lineNumber == 69 && columnNumber == 13)
                {
                    isobj4VisibilityDisabled = true;
                }
                else if (lineNumber == 87 && columnNumber == 13)
                {
                    isobj5VisibilityDisabled = true;
                }
                else if (lineNumber == 88 && columnNumber == 13)
                {
                    this.obj5.Click -= obj5Click;
                }
                else if (lineNumber == 410 && columnNumber == 21)
                {
                    this.obj11.Click -= obj11Click;
                }
                else if (lineNumber == 442 && columnNumber == 29)
                {
                    isobj13BackgroundDisabled = true;
                }
                else if (lineNumber == 443 && columnNumber == 29)
                {
                    this.obj13.Click -= obj13Click;
                }
                else if (lineNumber == 452 && columnNumber == 29)
                {
                    isobj14BackgroundDisabled = true;
                }
                else if (lineNumber == 453 && columnNumber == 29)
                {
                    this.obj14.Click -= obj14Click;
                }
                else if (lineNumber == 461 && columnNumber == 94)
                {
                    this.obj16.Click -= obj16Click;
                }
                else if (lineNumber == 463 && columnNumber == 88)
                {
                    this.obj17.Click -= obj17Click;
                }
                else if (lineNumber == 475 && columnNumber == 77)
                {
                    isobj18CommandDisabled = true;
                }
                else if (lineNumber == 484 && columnNumber == 33)
                {
                    isobj19CommandDisabled = true;
                }
                else if (lineNumber == 455 && columnNumber == 47)
                {
                    isobj20GlyphDisabled = true;
                }
                else if (lineNumber == 359 && columnNumber == 29)
                {
                    isobj21TextDisabled = true;
                }
                else if (lineNumber == 372 && columnNumber == 37)
                {
                    this.obj22.Click -= obj22Click;
                }
                else if (lineNumber == 393 && columnNumber == 37)
                {
                    isobj23ValueDisabled = true;
                }
                else if (lineNumber == 398 && columnNumber == 37)
                {
                    isobj24TextDisabled = true;
                }
                else if (lineNumber == 378 && columnNumber == 45)
                {
                    isobj25TextDisabled = true;
                }
                else if (lineNumber == 332 && columnNumber == 29)
                {
                    this.obj26.Click -= obj26Click;
                }
                else if (lineNumber == 344 && columnNumber == 78)
                {
                    isobj27ValueDisabled = true;
                }
                else if (lineNumber == 337 && columnNumber == 29)
                {
                    isobj28TextDisabled = true;
                }
                else if (lineNumber == 271 && columnNumber == 21)
                {
                    isobj29TextDisabled = true;
                }
                else if (lineNumber == 282 && columnNumber == 21)
                {
                    isobj30MaximumDisabled = true;
                }
                else if (lineNumber == 287 && columnNumber == 21)
                {
                    isobj30ValueDisabled = true;
                }
                else if (lineNumber == 284 && columnNumber == 21)
                {
                    this.obj30.ManipulationStarting -= obj30ManipulationStarting;
                }
                else if (lineNumber == 285 && columnNumber == 21)
                {
                    this.obj30.PointerCaptureLost -= obj30PointerCaptureLost;
                }
                else if (lineNumber == 306 && columnNumber == 21)
                {
                    isobj32TextDisabled = true;
                }
                else if (lineNumber == 163 && columnNumber == 21)
                {
                    isobj33BackgroundDisabled = true;
                }
                else if (lineNumber == 164 && columnNumber == 21)
                {
                    this.obj33.Click -= obj33Click;
                }
                else if (lineNumber == 181 && columnNumber == 21)
                {
                    this.obj34.Click -= obj34Click;
                }
                else if (lineNumber == 198 && columnNumber == 21)
                {
                    this.obj35.Click -= obj35Click;
                }
                else if (lineNumber == 216 && columnNumber == 21)
                {
                    this.obj36.Click -= obj36Click;
                }
                else if (lineNumber == 235 && columnNumber == 21)
                {
                    isobj37BackgroundDisabled = true;
                }
                else if (lineNumber == 236 && columnNumber == 21)
                {
                    this.obj37.Click -= obj37Click;
                }
                else if (lineNumber == 242 && columnNumber == 29)
                {
                    isobj38TextDisabled = true;
                }
                else if (lineNumber == 205 && columnNumber == 29)
                {
                    isobj39TextDisabled = true;
                }
                else if (lineNumber == 118 && columnNumber == 25)
                {
                    isobj42TextDisabled = true;
                }
                else if (lineNumber == 126 && columnNumber == 25)
                {
                    isobj43TextDisabled = true;
                }
                else if (lineNumber == 106 && columnNumber == 46)
                {
                    isobj44SourceDisabled = true;
                }
                else if (lineNumber == 57 && columnNumber == 77)
                {
                    isobj45FallbackColorDisabled = true;
                }
                else if (lineNumber == 58 && columnNumber == 31)
                {
                    isobj45TintColorDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // Views\Playback\NowPlayingBar.xaml line 41
                        this.obj3 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 4: // Views\Playback\NowPlayingBar.xaml line 62
                        this.obj4 = (global::Windows.UI.Xaml.Controls.Border)target;
                        break;
                    case 5: // Views\Playback\NowPlayingBar.xaml line 75
                        this.obj5 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj5Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.NavigateNowPlaying();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj5Click;
                        break;
                    case 11: // Views\Playback\NowPlayingBar.xaml line 405
                        this.obj11 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj11Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.SwitchToCompactView();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj11Click;
                        break;
                    case 13: // Views\Playback\NowPlayingBar.xaml line 439
                        this.obj13 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target;
                        this.obj13Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.ToggleShuffle();
                        };
                        ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target).Click += obj13Click;
                        break;
                    case 14: // Views\Playback\NowPlayingBar.xaml line 449
                        this.obj14 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target;
                        this.obj14Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.ToggleRepeat();
                        };
                        ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target).Click += obj14Click;
                        break;
                    case 16: // Views\Playback\NowPlayingBar.xaml line 461
                        this.obj16 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target;
                        this.obj16Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.SaveQueue();
                        };
                        ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target).Click += obj16Click;
                        break;
                    case 17: // Views\Playback\NowPlayingBar.xaml line 463
                        this.obj17 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target;
                        this.obj17Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.ClearQueue();
                        };
                        ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target).Click += obj17Click;
                        break;
                    case 18: // Views\Playback\NowPlayingBar.xaml line 475
                        this.obj18 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target;
                        break;
                    case 19: // Views\Playback\NowPlayingBar.xaml line 482
                        this.obj19 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target;
                        break;
                    case 20: // Views\Playback\NowPlayingBar.xaml line 455
                        this.obj20 = (global::Windows.UI.Xaml.Controls.FontIcon)target;
                        break;
                    case 21: // Views\Playback\NowPlayingBar.xaml line 356
                        this.obj21 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 22: // Views\Playback\NowPlayingBar.xaml line 368
                        this.obj22 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj22Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.ToggleMute();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj22Click;
                        break;
                    case 23: // Views\Playback\NowPlayingBar.xaml line 382
                        this.obj23 = (global::Windows.UI.Xaml.Controls.Slider)target;
                        this.bindingsTracking.RegisterTwoWayListener_23(this.obj23);
                        break;
                    case 24: // Views\Playback\NowPlayingBar.xaml line 394
                        this.obj24 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 25: // Views\Playback\NowPlayingBar.xaml line 375
                        this.obj25 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 26: // Views\Playback\NowPlayingBar.xaml line 331
                        this.obj26 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj26Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.ToggleMute();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj26Click;
                        break;
                    case 27: // Views\Playback\NowPlayingBar.xaml line 341
                        this.obj27 = (global::Windows.UI.Xaml.Controls.Slider)target;
                        this.bindingsTracking.RegisterTwoWayListener_27(this.obj27);
                        break;
                    case 28: // Views\Playback\NowPlayingBar.xaml line 334
                        this.obj28 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 29: // Views\Playback\NowPlayingBar.xaml line 263
                        this.obj29 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 30: // Views\Playback\NowPlayingBar.xaml line 273
                        this.obj30 = (global::Windows.UI.Xaml.Controls.Slider)target;
                        this.obj30ManipulationStarting = (global::System.Object p0, global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.OnPlayingSliderMoving();
                        };
                        ((global::Windows.UI.Xaml.Controls.Slider)target).ManipulationStarting += obj30ManipulationStarting;
                        this.obj30PointerCaptureLost = (global::System.Object p0, global::Windows.UI.Xaml.Input.PointerRoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.OnPlayingSliderChange();
                        };
                        ((global::Windows.UI.Xaml.Controls.Slider)target).PointerCaptureLost += obj30PointerCaptureLost;
                        this.bindingsTracking.RegisterTwoWayListener_30(this.obj30);
                        break;
                    case 32: // Views\Playback\NowPlayingBar.xaml line 298
                        this.obj32 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 33: // Views\Playback\NowPlayingBar.xaml line 156
                        this.obj33 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj33Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.ToggleShuffle();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj33Click;
                        break;
                    case 34: // Views\Playback\NowPlayingBar.xaml line 176
                        this.obj34 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj34Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.SkipPrevious();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj34Click;
                        break;
                    case 35: // Views\Playback\NowPlayingBar.xaml line 193
                        this.obj35 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj35Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.ChangePlaybackState();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj35Click;
                        break;
                    case 36: // Views\Playback\NowPlayingBar.xaml line 211
                        this.obj36 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj36Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.SkipNext();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj36Click;
                        break;
                    case 37: // Views\Playback\NowPlayingBar.xaml line 228
                        this.obj37 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj37Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlaybackViewModel.ToggleRepeat();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj37Click;
                        break;
                    case 38: // Views\Playback\NowPlayingBar.xaml line 239
                        this.obj38 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 39: // Views\Playback\NowPlayingBar.xaml line 202
                        this.obj39 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 42: // Views\Playback\NowPlayingBar.xaml line 114
                        this.obj42 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 43: // Views\Playback\NowPlayingBar.xaml line 122
                        this.obj43 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 44: // Views\Playback\NowPlayingBar.xaml line 105
                        this.obj44 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 45: // Views\Playback\NowPlayingBar.xaml line 57
                        this.obj45 = (global::Windows.UI.Xaml.Media.AcrylicBrush)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // INowPlayingBar_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Stylophone.Views.NowPlayingBar)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Stylophone.Views.NowPlayingBar obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PlaybackViewModel(obj.PlaybackViewModel, phase);
                    }
                }
            }
            private void Update_PlaybackViewModel(global::Stylophone.ViewModels.Playback.PlaybackViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_PlaybackViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PlaybackViewModel_CurrentTrack(obj.CurrentTrack, phase);
                        this.Update_PlaybackViewModel_HideTrackName(obj.HideTrackName, phase);
                        this.Update_PlaybackViewModel_IsShuffleEnabled(obj.IsShuffleEnabled, phase);
                        this.Update_PlaybackViewModel_IsRepeatEnabled(obj.IsRepeatEnabled, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_PlaybackViewModel_AddToPlaylistCommand(obj.AddToPlaylistCommand, phase);
                        this.Update_PlaybackViewModel_ShowAlbumCommand(obj.ShowAlbumCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PlaybackViewModel_RepeatIcon(obj.RepeatIcon, phase);
                        this.Update_PlaybackViewModel_VolumeIcon(obj.VolumeIcon, phase);
                        this.Update_PlaybackViewModel_MediaVolume(obj.MediaVolume, phase);
                        this.Update_PlaybackViewModel_TimeListened(obj.TimeListened, phase);
                        this.Update_PlaybackViewModel_MaxTimeValue(obj.MaxTimeValue, phase);
                        this.Update_PlaybackViewModel_CurrentTimeValue(obj.CurrentTimeValue, phase);
                        this.Update_PlaybackViewModel_TimeRemaining(obj.TimeRemaining, phase);
                        this.Update_PlaybackViewModel_PlayButtonContent(obj.PlayButtonContent, phase);
                    }
                }
            }
            private void Update_PlaybackViewModel_CurrentTrack(global::Stylophone.ViewModels.Items.TrackViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_PlaybackViewModel_CurrentTrack(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PlaybackViewModel_CurrentTrack_AlbumArt(obj.AlbumArt, phase);
                        this.Update_PlaybackViewModel_CurrentTrack_IsLight(obj.IsLight, phase);
                        this.Update_PlaybackViewModel_CurrentTrack_Name(obj.Name, phase);
                        this.Update_PlaybackViewModel_CurrentTrack_File(obj.File, phase);
                        this.Update_PlaybackViewModel_CurrentTrack_DominantColor(obj.DominantColor, phase);
                    }
                }
            }
            private void Update_PlaybackViewModel_CurrentTrack_AlbumArt(global::Windows.UI.Xaml.Media.Imaging.BitmapImage obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\NowPlayingBar.xaml line 41
                    if (!isobj3SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj3, obj, null);
                    }
                    // Views\Playback\NowPlayingBar.xaml line 105
                    if (!isobj44SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj44, obj, null);
                    }
                }
            }
            private void Update_PlaybackViewModel_CurrentTrack_IsLight(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\NowPlayingBar.xaml line 62
                    if (!isobj4VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj4, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_PlaybackViewModel_HideTrackName(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\NowPlayingBar.xaml line 75
                    if (!isobj5VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj5, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibilityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    }
                }
            }
            private void Update_PlaybackViewModel_IsShuffleEnabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\NowPlayingBar.xaml line 439
                    if (!isobj13BackgroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Background(this.obj13, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("BoolToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\Playback\NowPlayingBar.xaml line 156
                    if (!isobj33BackgroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Background(this.obj33, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("BoolToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_PlaybackViewModel_IsRepeatEnabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\NowPlayingBar.xaml line 449
                    if (!isobj14BackgroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Background(this.obj14, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("BoolToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                    // Views\Playback\NowPlayingBar.xaml line 228
                    if (!isobj37BackgroundDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Background(this.obj37, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("BoolToBrushConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                    }
                }
            }
            private void Update_PlaybackViewModel_AddToPlaylistCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Playback\NowPlayingBar.xaml line 475
                    if (!isobj18CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_MenuFlyoutItem_Command(this.obj18, obj, null);
                    }
                }
            }
            private void Update_PlaybackViewModel_ShowAlbumCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Playback\NowPlayingBar.xaml line 482
                    if (!isobj19CommandDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_MenuFlyoutItem_Command(this.obj19, obj, null);
                    }
                }
            }
            private void Update_PlaybackViewModel_RepeatIcon(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\NowPlayingBar.xaml line 455
                    if (!isobj20GlyphDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_FontIcon_Glyph(this.obj20, obj, null);
                    }
                    // Views\Playback\NowPlayingBar.xaml line 239
                    if (!isobj38TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj38, obj, null);
                    }
                }
            }
            private void Update_PlaybackViewModel_VolumeIcon(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\NowPlayingBar.xaml line 356
                    if (!isobj21TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj21, obj, null);
                    }
                    // Views\Playback\NowPlayingBar.xaml line 375
                    if (!isobj25TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj25, obj, null);
                    }
                    // Views\Playback\NowPlayingBar.xaml line 334
                    if (!isobj28TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj28, obj, null);
                    }
                }
            }
            private void Update_PlaybackViewModel_MediaVolume(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\NowPlayingBar.xaml line 382
                    if (!isobj23ValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj23, obj);
                    }
                    // Views\Playback\NowPlayingBar.xaml line 394
                    if (!isobj24TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj24, obj.ToString(), null);
                    }
                    // Views\Playback\NowPlayingBar.xaml line 341
                    if (!isobj27ValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj27, obj);
                    }
                }
            }
            private void Update_PlaybackViewModel_TimeListened(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\NowPlayingBar.xaml line 263
                    if (!isobj29TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj29, obj, null);
                    }
                }
            }
            private void Update_PlaybackViewModel_MaxTimeValue(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\NowPlayingBar.xaml line 273
                    if (!isobj30MaximumDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_RangeBase_Maximum(this.obj30, obj);
                    }
                }
            }
            private void Update_PlaybackViewModel_CurrentTimeValue(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\NowPlayingBar.xaml line 273
                    if (!isobj30ValueDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj30, obj);
                    }
                }
            }
            private void Update_PlaybackViewModel_TimeRemaining(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\NowPlayingBar.xaml line 298
                    if (!isobj32TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj32, obj, null);
                    }
                }
            }
            private void Update_PlaybackViewModel_PlayButtonContent(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\NowPlayingBar.xaml line 202
                    if (!isobj39TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj39, obj, null);
                    }
                }
            }
            private void Update_PlaybackViewModel_CurrentTrack_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\NowPlayingBar.xaml line 114
                    if (!isobj42TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj42, obj, null);
                    }
                }
            }
            private void Update_PlaybackViewModel_CurrentTrack_File(global::MpcNET.Types.IMpdFile obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PlaybackViewModel_CurrentTrack_File_Artist(obj.Artist, phase);
                    }
                }
            }
            private void Update_PlaybackViewModel_CurrentTrack_File_Artist(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\NowPlayingBar.xaml line 122
                    if (!isobj43TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj43, obj, null);
                    }
                }
            }
            private void Update_PlaybackViewModel_CurrentTrack_DominantColor(global::Windows.UI.Color obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Playback\NowPlayingBar.xaml line 57
                    if (!isobj45FallbackColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_XamlCompositionBrushBase_FallbackColor(this.obj45, obj);
                    }
                    // Views\Playback\NowPlayingBar.xaml line 57
                    if (!isobj45TintColorDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Media_AcrylicBrush_TintColor(this.obj45, obj);
                    }
                }
            }
            private void UpdateTwoWay_23_Value()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.PlaybackViewModel != null)
                        {
                            this.dataRoot.PlaybackViewModel.MediaVolume = this.obj23.Value;
                        }
                    }
                }
            }
            private void UpdateTwoWay_27_Value()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.PlaybackViewModel != null)
                        {
                            this.dataRoot.PlaybackViewModel.MediaVolume = this.obj27.Value;
                        }
                    }
                }
            }
            private void UpdateTwoWay_30_Value()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.PlaybackViewModel != null)
                        {
                            this.dataRoot.PlaybackViewModel.CurrentTimeValue = this.obj30.Value;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class NowPlayingBar_obj1_BindingsTracking
            {
                private global::System.WeakReference<NowPlayingBar_obj1_Bindings> weakRefToBindingObj; 

                public NowPlayingBar_obj1_BindingsTracking(NowPlayingBar_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<NowPlayingBar_obj1_Bindings>(obj);
                }

                public NowPlayingBar_obj1_Bindings TryGetBindingObject()
                {
                    NowPlayingBar_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_PlaybackViewModel(null);
                    UpdateChildListeners_PlaybackViewModel_CurrentTrack(null);
                }

                public void PropertyChanged_PlaybackViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    NowPlayingBar_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Stylophone.ViewModels.Playback.PlaybackViewModel obj = sender as global::Stylophone.ViewModels.Playback.PlaybackViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_PlaybackViewModel_CurrentTrack(obj.CurrentTrack, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_HideTrackName(obj.HideTrackName, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_IsShuffleEnabled(obj.IsShuffleEnabled, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_IsRepeatEnabled(obj.IsRepeatEnabled, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_RepeatIcon(obj.RepeatIcon, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_VolumeIcon(obj.VolumeIcon, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_MediaVolume(obj.MediaVolume, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_TimeListened(obj.TimeListened, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_MaxTimeValue(obj.MaxTimeValue, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_CurrentTimeValue(obj.CurrentTimeValue, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_TimeRemaining(obj.TimeRemaining, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_PlayButtonContent(obj.PlayButtonContent, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "CurrentTrack":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_CurrentTrack(obj.CurrentTrack, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "HideTrackName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_HideTrackName(obj.HideTrackName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsShuffleEnabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_IsShuffleEnabled(obj.IsShuffleEnabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsRepeatEnabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_IsRepeatEnabled(obj.IsRepeatEnabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "RepeatIcon":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_RepeatIcon(obj.RepeatIcon, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "VolumeIcon":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_VolumeIcon(obj.VolumeIcon, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MediaVolume":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_MediaVolume(obj.MediaVolume, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TimeListened":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_TimeListened(obj.TimeListened, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MaxTimeValue":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_MaxTimeValue(obj.MaxTimeValue, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "CurrentTimeValue":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_CurrentTimeValue(obj.CurrentTimeValue, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "TimeRemaining":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_TimeRemaining(obj.TimeRemaining, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "PlayButtonContent":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_PlayButtonContent(obj.PlayButtonContent, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Stylophone.ViewModels.Playback.PlaybackViewModel cache_PlaybackViewModel = null;
                public void UpdateChildListeners_PlaybackViewModel(global::Stylophone.ViewModels.Playback.PlaybackViewModel obj)
                {
                    if (obj != cache_PlaybackViewModel)
                    {
                        if (cache_PlaybackViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_PlaybackViewModel).PropertyChanged -= PropertyChanged_PlaybackViewModel;
                            cache_PlaybackViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_PlaybackViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_PlaybackViewModel;
                        }
                    }
                }
                public void PropertyChanged_PlaybackViewModel_CurrentTrack(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    NowPlayingBar_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Stylophone.ViewModels.Items.TrackViewModel obj = sender as global::Stylophone.ViewModels.Items.TrackViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_PlaybackViewModel_CurrentTrack_AlbumArt(obj.AlbumArt, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_CurrentTrack_IsLight(obj.IsLight, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_CurrentTrack_Name(obj.Name, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_CurrentTrack_File(obj.File, DATA_CHANGED);
                                bindings.Update_PlaybackViewModel_CurrentTrack_DominantColor(obj.DominantColor, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "AlbumArt":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_CurrentTrack_AlbumArt(obj.AlbumArt, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsLight":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_CurrentTrack_IsLight(obj.IsLight, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_CurrentTrack_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "File":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_CurrentTrack_File(obj.File, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "DominantColor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PlaybackViewModel_CurrentTrack_DominantColor(obj.DominantColor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Stylophone.ViewModels.Items.TrackViewModel cache_PlaybackViewModel_CurrentTrack = null;
                public void UpdateChildListeners_PlaybackViewModel_CurrentTrack(global::Stylophone.ViewModels.Items.TrackViewModel obj)
                {
                    if (obj != cache_PlaybackViewModel_CurrentTrack)
                    {
                        if (cache_PlaybackViewModel_CurrentTrack != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_PlaybackViewModel_CurrentTrack).PropertyChanged -= PropertyChanged_PlaybackViewModel_CurrentTrack;
                            cache_PlaybackViewModel_CurrentTrack = null;
                        }
                        if (obj != null)
                        {
                            cache_PlaybackViewModel_CurrentTrack = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_PlaybackViewModel_CurrentTrack;
                        }
                    }
                }
                public void RegisterTwoWayListener_23(global::Windows.UI.Xaml.Controls.Slider sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_23_Value();
                        }
                    });
                }
                public void RegisterTwoWayListener_27(global::Windows.UI.Xaml.Controls.Slider sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_27_Value();
                        }
                    });
                }
                public void RegisterTwoWayListener_30(global::Windows.UI.Xaml.Controls.Slider sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_30_Value();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // Views\Playback\NowPlayingBar.xaml line 1
                {
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)(target);
                    ((global::Windows.UI.Xaml.Controls.UserControl)element1).Loaded += this.OnLoaded;
                    ((global::Windows.UI.Xaml.Controls.UserControl)element1).Unloaded += this.OnUnloaded;
                }
                break;
            case 2: // Views\Playback\NowPlayingBar.xaml line 27
                {
                    this.RootGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 5: // Views\Playback\NowPlayingBar.xaml line 75
                {
                    this.AlbumView = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 6: // Views\Playback\NowPlayingBar.xaml line 134
                {
                    this.MainContent = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 7: // Views\Playback\NowPlayingBar.xaml line 249
                {
                    this.PlaybackSlider = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 8: // Views\Playback\NowPlayingBar.xaml line 317
                {
                    this.MiscButtons = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 9: // Views\Playback\NowPlayingBar.xaml line 326
                {
                    this.SoundPanel = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 10: // Views\Playback\NowPlayingBar.xaml line 348
                {
                    this.SoundFlyout = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 12: // Views\Playback\NowPlayingBar.xaml line 422
                {
                    this.MoreButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 13: // Views\Playback\NowPlayingBar.xaml line 439
                {
                    this.ShuffleMenu = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                }
                break;
            case 14: // Views\Playback\NowPlayingBar.xaml line 449
                {
                    this.RepeatMenu = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                }
                break;
            case 15: // Views\Playback\NowPlayingBar.xaml line 459
                {
                    this.SmallViewSeparator = (global::Windows.UI.Xaml.Controls.MenuFlyoutSeparator)(target);
                }
                break;
            case 23: // Views\Playback\NowPlayingBar.xaml line 382
                {
                    global::Windows.UI.Xaml.Controls.Slider element23 = (global::Windows.UI.Xaml.Controls.Slider)(target);
                    ((global::Windows.UI.Xaml.Controls.Slider)element23).PointerWheelChanged += this.Volume_PointerWheelChanged;
                }
                break;
            case 26: // Views\Playback\NowPlayingBar.xaml line 331
                {
                    this.MuteButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 27: // Views\Playback\NowPlayingBar.xaml line 341
                {
                    global::Windows.UI.Xaml.Controls.Slider element27 = (global::Windows.UI.Xaml.Controls.Slider)(target);
                    ((global::Windows.UI.Xaml.Controls.Slider)element27).PointerWheelChanged += this.Volume_PointerWheelChanged;
                }
                break;
            case 30: // Views\Playback\NowPlayingBar.xaml line 273
                {
                    this.ProgressBar = (global::Windows.UI.Xaml.Controls.Slider)(target);
                }
                break;
            case 31: // Views\Playback\NowPlayingBar.xaml line 289
                {
                    this.LoadingBar = (global::Windows.UI.Xaml.Controls.ProgressBar)(target);
                }
                break;
            case 33: // Views\Playback\NowPlayingBar.xaml line 156
                {
                    this.ShuffleButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 37: // Views\Playback\NowPlayingBar.xaml line 228
                {
                    this.RepeatButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 40: // Views\Playback\NowPlayingBar.xaml line 93
                {
                    this.AlbumArt = (global::Microsoft.Toolkit.Uwp.UI.Controls.DropShadowPanel)(target);
                }
                break;
            case 41: // Views\Playback\NowPlayingBar.xaml line 113
                {
                    this.TrackTitle = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 46: // Views\Playback\NowPlayingBar.xaml line 499
                {
                    this.Normal = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 47: // Views\Playback\NowPlayingBar.xaml line 518
                {
                    this.Large = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\Playback\NowPlayingBar.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    NowPlayingBar_obj1_Bindings bindings = new NowPlayingBar_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

