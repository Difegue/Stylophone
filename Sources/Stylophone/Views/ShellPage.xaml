<Page
    x:Class="Stylophone.Views.ShellPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CommunityToolkit.WinUI.Converters"
    xmlns:converters="using:CommunityToolkit.WinUI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:Stylophone.Helpers"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mpcnet="using:MpcNET.Types"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:strings="using:Stylophone.Localization.Strings"
    xmlns:stylophone="using:Stylophone.Common.ViewModels"
    xmlns:viewmodels="using:Stylophone.ViewModels"
    xmlns:views="using:Stylophone.Views" xmlns:behaviors="using:CommunityToolkit.WinUI.Behaviors"
    muxc:BackdropMaterial.ApplyToRootOrPageBackground="True"
    PreviewKeyDown="GlobalPlayPauseShortcut"
    mc:Ignorable="d">

    <Page.Resources>

        <ResourceDictionary>
            <converters:StringVisibilityConverter x:Key="StringToVisibilityConverter" />
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

            <DataTemplate x:Key="StringItemTemplate" x:DataType="x:String">
                <StackPanel Height="46" Orientation="Vertical">
                    <TextBlock
                        Margin="{StaticResource XSmallTopMargin}"
                        FontStyle="Italic"
                        Text="{x:Bind}" />
                    <MenuFlyoutSeparator Width="2000" Margin="-12,8,0,0" />
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="MpdFileItemTemplate" x:DataType="mpcnet:IMpdFile">

                <StackPanel Height="46" Orientation="Vertical">
                    <TextBlock
                        Margin="{StaticResource XXSmallTopMargin}"
                        Style="{StaticResource BaseTextBlockStyle}"
                        Text="{x:Bind Title}"
                        TextTrimming="CharacterEllipsis"
                        TextWrapping="NoWrap"
                        ToolTipService.ToolTip="{x:Bind Title}" />
                    <TextBlock
                        Style="{StaticResource CaptionTextBlockStyle}"
                        Text="{x:Bind Album}"
                        TextTrimming="CharacterEllipsis"
                        TextWrapping="NoWrap" />
                </StackPanel>
            </DataTemplate>

            <views:MyDataTemplateSelector
                x:Key="MyDataTemplateSelector"
                MpdFile="{StaticResource MpdFileItemTemplate}"
                Normal="{StaticResource StringItemTemplate}" />

            <!--  This top margin is the height of the custom TitleBar  -->
            <Thickness x:Key="NavigationViewMinimalContentMargin">0,40,0,0</Thickness>
            <Thickness x:Key="NavigationViewContentMargin">0,40,0,0</Thickness>
            <Thickness x:Key="NavigationViewContentGridBorderThickness">0</Thickness>
            <SolidColorBrush x:Key="NavigationViewContentBackground" Color="Transparent" />
        </ResourceDictionary>
    </Page.Resources>


    <i:Interaction.Behaviors>
        <ic:EventTriggerBehavior EventName="Loaded">
            <ic:InvokeCommandAction Command="{x:Bind ViewModel.LoadedCommand}" />
        </ic:EventTriggerBehavior>
    </i:Interaction.Behaviors>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="112" />
        </Grid.RowDefinitions>

        <Border
            x:Name="AppTitleBar"
            Height="40"
            Margin="48,4,0,0"
            VerticalAlignment="Top"
            Background="Transparent"
            Canvas.ZIndex="1"
            IsHitTestVisible="True">
            <StackPanel Orientation="Horizontal" Spacing="8">
                <Image VerticalAlignment="Center"
                        Margin="0,8,0,0"
                        Width="16"
                        Height="16"
                        Source="ms-appx:///Assets/Square44x44Logo.altform-unplated_targetsize-16.png" />
                <TextBlock
                    x:Name="AppTitle"
                    Margin="4,8,0,0"
                    VerticalAlignment="Center"
                    FontFamily="Segoe UI Variable Display"
                    Style="{StaticResource CaptionTextBlockStyle}"
                    Text="Stylophone" />
            </StackPanel>
        </Border>

        <muxc:NavigationView
            x:Name="navigationView"
            Grid.Row="0"
            Canvas.ZIndex="0"
            DisplayModeChanged="NavigationViewControl_DisplayModeChanged"
            ExpandedModeThresholdWidth="900"
            IsBackButtonVisible="Visible"
            IsBackEnabled="{x:Bind ViewModel.IsBackEnabled, Mode=OneWay}"
            IsSettingsVisible="True"
            IsTitleBarAutoPaddingEnabled="False">
            <muxc:NavigationView.MenuItems>
                <muxc:NavigationViewItem
                    helpers:NavHelper.NavigateTo="stylophone:QueueViewModel"
                    Content="{x:Bind strings:Resources.QueueHeader}"
                    Icon="Audio" />
                <muxc:NavigationViewItem
                    helpers:NavHelper.NavigateTo="viewmodels:LibraryViewModel"
                    Content="{x:Bind strings:Resources.LibraryHeader}"
                    Icon="Library" />
                <muxc:NavigationViewItem
                    helpers:NavHelper.NavigateTo="stylophone:FoldersViewModel"
                    Content="{x:Bind strings:Resources.FoldersHeader}"
                    Icon="MapDrive" />

                <muxc:NavigationViewItem
                    x:Name="RandomNavItem"
                    Content="{x:Bind strings:Resources.RandomTracksHeader}"
                    SelectsOnInvoked="False">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon Glyph="&#xF133;" />
                    </muxc:NavigationViewItem.Icon>
                </muxc:NavigationViewItem>
                <muxc:NavigationViewItemSeparator />
                <muxc:NavigationViewItem
                    x:Name="playlistContainer"
                    Content="{x:Bind strings:Resources.PlaylistsHeader}"
                    Icon="MusicInfo"
                    SelectsOnInvoked="False" />
                <!--  This menuitem is filled in viewmodel  -->
            </muxc:NavigationView.MenuItems>

            <muxc:NavigationView.AutoSuggestBox>
                <AutoSuggestBox
                    AutomationProperties.Name="Search"
                    GotFocus="OpenSuggestionsPanel"
                    ItemTemplateSelector="{StaticResource MyDataTemplateSelector}"
                    PlaceholderText="{x:Bind strings:Resources.SearchPlaceholderText}"
                    QueryIcon="Find"
                    UpdateTextOnSelect="False" />
            </muxc:NavigationView.AutoSuggestBox>

            <muxc:NavigationView.PaneFooter>

                <StackPanel Orientation="Vertical" Visibility="{x:Bind ViewModel.IsServerUpdating, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                    
                    <StackPanel Orientation="Horizontal" Spacing="16" Margin="16,8,16,8">
                        <muxc:InfoBadge ToolTipService.ToolTip="{x:Bind strings:Resources.DatabaseUpdateHeader}" >
                            <muxc:InfoBadge.IconSource>
                                <muxc:SymbolIconSource Symbol="Sync"/>
                            </muxc:InfoBadge.IconSource>
                        </muxc:InfoBadge>
                        <TextBlock Text="{x:Bind strings:Resources.DatabaseUpdateHeader}" FontFamily="Segoe UI Variable Display"
                                   ToolTipService.ToolTip="{x:Bind strings:Resources.DatabaseUpdateHeader}" Style="{StaticResource BaseTextBlockStyle}"/>
                    </StackPanel>
                </StackPanel>
                
                
            </muxc:NavigationView.PaneFooter>


            <i:Interaction.Behaviors>
                <ic:EventTriggerBehavior EventName="ItemInvoked">
                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.NavigateCommand}" />
                </ic:EventTriggerBehavior>
                <ic:EventTriggerBehavior EventName="Tapped" SourceObject="{x:Bind RandomNavItem}">
                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.AddRandomTracksCommand}" />
                </ic:EventTriggerBehavior>
            </i:Interaction.Behaviors>

            <Grid x:Name="contentContainer">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>


                <!--  Custom Header so we can hide the entire pane for fullscreen views  -->
                <Grid
                    x:Name="Header"
                    Grid.Row="0"
                    Visibility="{x:Bind ViewModel.HeaderText, Mode=OneWay, Converter={StaticResource StringToVisibilityConverter}}">
                    <TextBlock
                        Margin="36,12,0,16"
                        FontFamily="Segoe UI Variable Display"
                        FontSize="28"
                        Style="{ThemeResource TitleTextBlockStyle}"
                        Text="{x:Bind ViewModel.HeaderText, Mode=OneWay}" />
                </Grid>

                <!--  Content  -->
                <Frame x:Name="shellFrame" Grid.Row="1" />

                <!--  InAppNotifications go here  -->
                <muxc:InfoBar 
                      Grid.Row="1"
                      Margin="0,0,0,36"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Bottom">
                    <i:Interaction.Behaviors>
                        <behaviors:StackedNotificationsBehavior x:Name="stackedNotificationBehavior" />
                    </i:Interaction.Behaviors>
                </muxc:InfoBar>
                
            </Grid>
        </muxc:NavigationView>

        <views:NowPlayingBar x:Name="nowPlayingBar" Grid.Row="1">
            <views:NowPlayingBar.Shadow>
                <ThemeShadow x:Name="NowPlayingShadow" />
            </views:NowPlayingBar.Shadow>
        </views:NowPlayingBar>

    </Grid>

</Page>
