<Page
    x:Class="Stylophone.Views.OverlayView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:converters="using:Stylophone.Helpers"
    xmlns:converters1="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:strings="using:Stylophone.Localization.Strings"
    d:DesignHeight="364"
    d:DesignWidth="340"
    Unloaded="Page_Unloaded"
    mc:Ignorable="d">

    <Page.Resources>
        <converters:SKImageToUWPConverter x:Key="SKImageToUWPConverter" />
        <converters:SliderValueConverter x:Key="SliderValueConverter" />

        <converters1:BoolToObjectConverter
            x:Key="BoolToBrushConverter"
            FalseValue="{ThemeResource SystemControlDisabledTransparentBrush}"
            TrueValue="{ThemeResource ButtonBackgroundPointerOver}" />

    </Page.Resources>

    <Grid
        BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
        BorderThickness="1"
        CornerRadius="10">
        <Image
            Margin="2"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Source="{x:Bind PlaybackViewModel.CurrentTrack.AlbumArt, Mode=OneWay, Converter={StaticResource SKImageToUWPConverter}}"
            Stretch="UniformToFill" />

        <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Border.Background>
                <AcrylicBrush
                    BackgroundSource="Backdrop"
                    FallbackColor="{ThemeResource SolidBackgroundFillColorBase}"
                    TintColor="{ThemeResource SolidBackgroundFillColorBase}"
                    TintOpacity="0.6" />
            </Border.Background>
        </Border>


        <StackPanel
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Orientation="Horizontal"
            Visibility="Collapsed">
            <Button
                Width="43"
                Height="43"
                Margin="4,6,0,0"
                Click="{x:Bind NavigateToMainView}"
                FontSize="18"
                Style="{StaticResource SVButtonStyle}">
                <Button.Content>
                    &#xE72B;
                </Button.Content>
            </Button>
        </StackPanel>

        <StackPanel VerticalAlignment="Bottom">
            <TextBlock
                x:Name="compactTrackName"
                Margin="24,0,46,4"
                FontSize="18"
                FontWeight="Bold"
                MaxLines="2"
                Text="{x:Bind PlaybackViewModel.CurrentTrack.Name, Mode=OneWay}"
                TextTrimming="CharacterEllipsis"
                TextWrapping="Wrap"
                Visibility="Collapsed" />

            <TextBlock
                x:Name="compactTrackArtist"
                Margin="24,0,46,8"
                FontSize="14"
                FontWeight="Bold"
                Opacity="0.6"
                Text="{x:Bind PlaybackViewModel.CurrentTrack.File.Artist, Mode=OneWay}"
                TextTrimming="CharacterEllipsis"
                Visibility="Collapsed" />

            <!--  Slider Times  -->
            <Grid x:Name="compactSliderTimes" Visibility="Collapsed">
                <TextBlock
                    Grid.Column="0"
                    Margin="24,8,0,0"
                    HorizontalAlignment="Left"
                    FontSize="12"
                    FontWeight="SemiBold"
                    Opacity="0.8"
                    Text="{x:Bind PlaybackViewModel.TimeListened, Mode=OneWay}" />

                <TextBlock
                    Margin="0,8,24,0"
                    HorizontalAlignment="Right"
                    FontSize="12"
                    FontWeight="SemiBold"
                    Opacity="0.8"
                    Text="{x:Bind PlaybackViewModel.TimeRemaining, Mode=OneWay}" />
            </Grid>

            <!--  Slider  -->
            <!--  TODO: ManipulationStarting doesn't work ?  -->
            <Slider
                Margin="24,0,24,0"
                ManipulationMode="All"
                ManipulationStarting="{x:Bind PlaybackViewModel.OnPlayingSliderMoving}"
                Maximum="{x:Bind PlaybackViewModel.MaxTimeValue, Mode=OneWay}"
                PointerCaptureLost="{x:Bind PlaybackViewModel.OnPlayingSliderChange}"
                ThumbToolTipValueConverter="{StaticResource SliderValueConverter}"
                Value="{x:Bind PlaybackViewModel.CurrentTimeValue, Mode=TwoWay}" />

            <!--  Track Controls  -->
            <StackPanel
                Margin="0,0,0,16"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <Button
                    x:Name="compactShuffleButton"
                    Width="43"
                    Height="43"
                    Margin="{StaticResource XXSmallLeftMargin}"
                    Background="{x:Bind PlaybackViewModel.IsShuffleEnabled, Converter={StaticResource BoolToBrushConverter}, Mode=OneWay}"
                    Click="{x:Bind PlaybackViewModel.ToggleShuffle}"
                    FontSize="18"
                    Style="{StaticResource SVButtonStyle}"
                    ToolTipService.ToolTip="{x:Bind strings:Resources.ActionToggleShuffle}"
                    Visibility="Collapsed">
                    <Button.Content>
                        &#xE8B1;
                    </Button.Content>
                </Button>

                <!--  Back  -->
                <Button
                    Width="46"
                    Height="46"
                    Margin="{StaticResource XXSmallLeftMargin}"
                    Click="{x:Bind PlaybackViewModel.SkipPrevious}"
                    FontSize="22"
                    Style="{StaticResource SVButtonStyle}"
                    ToolTipService.ToolTip="{x:Bind strings:Resources.ActionSkipPrevious}">
                    <Button.Content>
                        &#xF8AC;
                    </Button.Content>
                </Button>

                <!--  Play / Pause  -->
                <Button
                    Width="52"
                    Height="52"
                    Margin="{StaticResource XXSmallLeftMargin}"
                    Click="{x:Bind PlaybackViewModel.ChangePlaybackState}"
                    Content="{x:Bind PlaybackViewModel.PlayButtonContent, Mode=OneWay}"
                    FontSize="29"
                    Style="{StaticResource SVButtonStyle}"
                    ToolTipService.ToolTip="{x:Bind strings:Resources.ActionPlayPause}" />

                <!--  Next  -->
                <Button
                    Width="46"
                    Height="46"
                    Margin="{StaticResource XXSmallLeftMargin}"
                    Click="{x:Bind PlaybackViewModel.SkipNext}"
                    FontSize="22"
                    Style="{StaticResource SVButtonStyle}"
                    ToolTipService.ToolTip="{x:Bind strings:Resources.ActionSkipNext}">
                    <Button.Content>
                        &#xF8AD;
                    </Button.Content>
                </Button>

                <!--  Repeat  -->
                <Button
                    x:Name="compactRepeatButton"
                    Width="43"
                    Height="43"
                    Margin="{StaticResource XXSmallLeftMargin}"
                    Background="{x:Bind PlaybackViewModel.IsRepeatEnabled, Converter={StaticResource BoolToBrushConverter}, Mode=OneWay}"
                    Click="{x:Bind PlaybackViewModel.ToggleRepeat}"
                    Content="{x:Bind PlaybackViewModel.RepeatIcon, Mode=OneWay}"
                    FontSize="18"
                    Style="{StaticResource SVButtonStyle}"
                    ToolTipService.ToolTip="{x:Bind strings:Resources.ActionToggleRepeat}"
                    Visibility="Collapsed" />
            </StackPanel>
        </StackPanel>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="260" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="compactShuffleButton.Visibility" Value="Visible" />
                        <Setter Target="compactRepeatButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="160" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="compactSliderTimes.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="190" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="compactSliderTimes.Visibility" Value="Visible" />
                        <Setter Target="compactTrackName.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="220" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="compactSliderTimes.Visibility" Value="Visible" />
                        <Setter Target="compactTrackName.Visibility" Value="Visible" />
                        <Setter Target="compactTrackArtist.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="300" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="compactSliderTimes.Visibility" Value="Visible" />
                        <Setter Target="compactTrackName.Visibility" Value="Visible" />
                        <Setter Target="compactTrackArtist.Visibility" Value="Visible" />
                        <Setter Target="compactTrackName.FontSize" Value="26" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
