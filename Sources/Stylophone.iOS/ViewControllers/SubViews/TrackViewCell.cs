// This file has been autogenerated from a class added in the UI designer.

using System;
using CoreGraphics;
using Foundation;
using Stylophone.Common.Helpers;
using Stylophone.Common.ViewModels;
using Stylophone.iOS.Helpers;
using UIKit;

namespace Stylophone.iOS.ViewControllers
{


    public partial class TrackViewCell : UITableViewCell
    {
        public TrackViewCell(IntPtr handle) : base(handle)
        {
        }

        private PropertyBinder<TrackViewModel> _propertyBinder;
        private UIContextMenuInteraction _contextMenuInteraction;

        internal void Configure(int row, TrackViewModel trackViewModel)
        {
            // Set background depending on the row number
            BackgroundColor = (row % 2 == 0) ? UIColor.SystemGray6Color : UIColor.Clear;

            // Bind trackData
            _propertyBinder?.Dispose();
            _propertyBinder = new PropertyBinder<TrackViewModel>(trackViewModel);
            var negateBoolTransformer = NSValueTransformer.GetValueTransformer(nameof(ReverseBoolValueTransformer));

            Title.Text = trackViewModel.Name;
            Artist.Text = trackViewModel.File.Artist;

            _propertyBinder.BindButton(AlbumTitle, trackViewModel.File.Album, trackViewModel.ViewAlbumCommand, trackViewModel.File);

            _propertyBinder.Bind<bool>(NowPlayingIndicator, "hidden", nameof(trackViewModel.IsPlaying),
                valueTransformer: negateBoolTransformer);

            var time = trackViewModel.File.Time;
            Duration.Text = Miscellaneous.FormatTimeString(time * 1000);
        }
    }
}
