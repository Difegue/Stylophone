// This file has been autogenerated from a class added in the UI designer.

using System;
using Stylophone.Common.Helpers;
using Stylophone.Common.ViewModels;
using Stylophone.iOS.Helpers;
using Foundation;
using UIKit;
using Stylophone.Common.ViewModels.Items;

namespace Stylophone.iOS.Views
{
	public partial class ServerOutputCell : UITableViewCell
	{
		public ServerOutputCell (IntPtr handle) : base (handle)
		{
		}

        private PropertyBinder<OutputViewModel> _propertyBinder;
        private OutputViewModel _outputViewModel;

        internal void Configure(int row, OutputViewModel outputViewModel)
        {
            // Bind output
            _outputViewModel = outputViewModel;
            _propertyBinder?.Dispose();
            _propertyBinder = new PropertyBinder<OutputViewModel>(outputViewModel);
            var negateBoolTransformer = NSValueTransformer.GetValueTransformer(nameof(ReverseBoolValueTransformer));

            if (outputViewModel != null)
            {
                OutputLabel.Text = outputViewModel.Name + " (" + outputViewModel.Plugin + ")";

                _propertyBinder.Bind<bool>(OutputToggle, "on", nameof(outputViewModel.IsEnabled), true);
            }

        }
    }
}
